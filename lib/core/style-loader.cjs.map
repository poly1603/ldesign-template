{"version":3,"file":"style-loader.cjs","sources":["../../src/core/style-loader.ts"],"sourcesContent":["/**\n * 样式加载助手 - 自动加载组件样式\n */\n\n/**\n * 已加载的样式集合 - 使用WeakMap避免内存泄漏\n */\nconst loadedStyles = new Set<string>()\nconst styleElements = new WeakMap<object, HTMLLinkElement>() // 使用WeakMap存储样式元素引用\nconst styleKeyMap = new Map<string, object>() // 映射字符串key到对象key\nconst MAX_STYLES = 100 // 限制最大样式数量\nlet cleanupTimer: ReturnType<typeof setTimeout> | null = null\n\n/**\n * 加载组件样式\n */\nexport function loadComponentStyle(\n  category: string,\n  device: string,\n  name: string,\n  componentPath?: string\n): void {\n  // 只在浏览器环境中加载样式\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const styleId = `template-style-${category}-${device}-${name}`\n\n  // 检查样式是否已经加载\n  if (loadedStyles.has(styleId) || document.getElementById(styleId)) {\n    return\n  }\n\n  // 如果提供了组件路径，尝试加载对应的样式\n  if (componentPath && componentPath.endsWith('.vue.js')) {\n    const stylePath = componentPath.replace('.vue.js', '.vue.css')\n    \n    try {\n      // 创建 link 元素\n      const link = document.createElement('link')\n      link.id = styleId\n      link.rel = 'stylesheet'\n      \n      // 构建样式文件的URL\n      // 处理相对路径\n      if (stylePath.startsWith('../')) {\n        // 从 import.meta.url 构建完整URL\n        const baseUrl = new URL(import.meta.url)\n        const styleUrl = new URL(stylePath, baseUrl)\n        link.href = styleUrl.href\n      } else {\n        link.href = stylePath\n      }\n      \n      // 添加到文档\n      document.head.appendChild(link)\n      loadedStyles.add(styleId)\n      \n      // 存储元素引用以便清理\n      const keyObj = { id: styleId }\n      styleKeyMap.set(styleId, keyObj)\n      styleElements.set(keyObj, link)\n      \n      // 限制样式数量，移除最旧的\n      if (loadedStyles.size > MAX_STYLES) {\n        const firstStyle = loadedStyles.values().next().value\n        if (firstStyle) {\n          removeStyle(firstStyle)\n        }\n      }\n      \n      // 定期清理未使用样式\n      scheduleCleanup()\n      \n      \n    } catch (error) {\n      console.warn(`[StyleLoader] 无法加载样式: ${stylePath}`, error)\n    }\n  }\n}\n\n/**\n * 批量加载样式\n */\nexport function loadStyles(paths: string[]): void {\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  paths.forEach(path => {\n    const id = `style-${path.replace(/[^a-z0-9]/gi, '-')}`\n    \n    if (loadedStyles.has(id) || document.getElementById(id)) {\n      return\n    }\n\n    try {\n      const link = document.createElement('link')\n      link.id = id\n      link.rel = 'stylesheet'\n      link.href = path\n      document.head.appendChild(link)\n      loadedStyles.add(id)\n    } catch (error) {\n      console.warn(`[StyleLoader] 无法加载样式: ${path}`, error)\n    }\n  })\n}\n\n/**\n * 加载全局样式\n */\nexport function loadGlobalStyles(): void {\n  // 尝试加载主样式文件\n  loadStyles([\n    '@ldesign/template/index.css',\n    '@ldesign/template/es/index.css',\n  ])\n}\n\n/**\n * 移除单个样式\n */\nexport function removeStyle(id: string): void {\n  const keyObj = styleKeyMap.get(id)\n  const element = document.getElementById(id) || (keyObj && styleElements.get(keyObj))\n  if (element) {\n    element.remove()\n  }\n  loadedStyles.delete(id)\n  if (keyObj) {\n    styleElements.delete(keyObj)\n    styleKeyMap.delete(id)\n  }\n}\n\n/**\n * 清除已加载的样式\n */\nexport function clearLoadedStyles(): void {\n  if (cleanupTimer) {\n    clearTimeout(cleanupTimer)\n    cleanupTimer = null\n  }\n  \n  loadedStyles.forEach(id => {\n    removeStyle(id)\n  })\n  loadedStyles.clear()\n  styleKeyMap.clear()\n  // WeakMap会自动垃圾回收\n}\n\n/**\n * 定期清理调度器\n */\nfunction scheduleCleanup(): void {\n  if (cleanupTimer) return\n  \n  cleanupTimer = setTimeout(() => {\n    cleanupUnusedStyles()\n    cleanupTimer = null\n  }, 30000) // 30秒后执行清理\n}\n\n/**\n * 清除未使用的样式\n */\nexport function cleanupUnusedStyles(): void {\n  const usedStyles = new Set<string>()\n  \n  // 检查DOM中实际使用的模板\n  document.querySelectorAll('[data-template-style]').forEach(el => {\n    const styleId = el.getAttribute('data-template-style')\n    if (styleId) usedStyles.add(styleId)\n  })\n  \n  // 移除未使用的样式\n  loadedStyles.forEach(id => {\n    if (!usedStyles.has(id)) {\n      removeStyle(id)\n    }\n  })\n}\n"],"names":["loadedStyles","Set","styleElements","WeakMap","styleKeyMap","Map","MAX_STYLES","cleanupTimer","loadComponentStyle","category","device","name","componentPath","document","styleId","has","getElementById","endsWith","stylePath","replace","link","createElement","id","rel","startsWith","baseUrl","URL","import","styleUrl","href","head","appendChild","add","keyObj","set","size","firstStyle","values","next","value","removeStyle","scheduleCleanup","error","console","warn","loadStyles","paths","forEach","path","loadGlobalStyles","get","element","remove","delete","clearLoadedStyles","clearTimeout","clear","setTimeout","cleanupUnusedStyles","usedStyles","querySelectorAll","el","getAttribute"],"mappings":"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"}