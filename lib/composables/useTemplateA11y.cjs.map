{"version":3,"file":"useTemplateA11y.cjs","sources":["../../src/composables/useTemplateA11y.ts"],"sourcesContent":["/**\r\n * 模板无障碍支持系统\r\n * \r\n * 提供键盘导航、屏幕阅读器支持、焦点管理等功能\r\n */\r\n\r\nimport { computed, nextTick, onMounted, onUnmounted, ref, watch } from 'vue'\r\n\r\n/**\r\n * 无障碍配置\r\n */\r\nexport interface A11yConfig {\r\n  // ARIA 标签\r\n  ariaLabels?: Record<string, string>\r\n  ariaDescriptions?: Record<string, string>\r\n  \r\n  // 键盘导航\r\n  keyboardNavigation?: boolean\r\n  trapFocus?: boolean\r\n  escapeDeactivates?: boolean\r\n  \r\n  // 屏幕阅读器\r\n  screenReaderMode?: boolean\r\n  announceChanges?: boolean\r\n  liveRegion?: 'polite' | 'assertive' | 'off'\r\n  \r\n  // 视觉辅助\r\n  highContrast?: boolean\r\n  focusIndicator?: boolean\r\n  reducedMotion?: boolean\r\n  \r\n  // 语义化\r\n  headingLevel?: number\r\n  landmark?: 'main' | 'navigation' | 'complementary' | 'contentinfo'\r\n  \r\n  // 快捷键\r\n  shortcuts?: Record<string, () => void>\r\n}\r\n\r\n/**\r\n * 焦点管理器\r\n */\r\nclass FocusManager {\r\n  private focusableElements: HTMLElement[] = []\r\n  private currentIndex = -1\r\n  private container: HTMLElement | null = null\r\n  private originalFocus: HTMLElement | null = null\r\n  \r\n  /**\r\n   * 初始化\r\n   */\r\n  init(container: HTMLElement) {\r\n    this.container = container\r\n    this.originalFocus = document.activeElement as HTMLElement\r\n    this.updateFocusableElements()\r\n  }\r\n  \r\n  /**\r\n   * 更新可聚焦元素列表\r\n   */\r\n  updateFocusableElements() {\r\n    if (!this.container) return\r\n    \r\n    const selector = [\r\n      'a[href]',\r\n      'button:not([disabled])',\r\n      'input:not([disabled])',\r\n      'select:not([disabled])',\r\n      'textarea:not([disabled])',\r\n      '[tabindex]:not([tabindex=\"-1\"])',\r\n      '[contenteditable]'\r\n    ].join(', ')\r\n    \r\n    this.focusableElements = Array.from(\r\n      this.container.querySelectorAll(selector)\r\n    ) as HTMLElement[]\r\n  }\r\n  \r\n  /**\r\n   * 聚焦第一个元素\r\n   */\r\n  focusFirst() {\r\n    if (this.focusableElements.length > 0) {\r\n      this.currentIndex = 0\r\n      this.focusableElements[0].focus()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 聚焦最后一个元素\r\n   */\r\n  focusLast() {\r\n    if (this.focusableElements.length > 0) {\r\n      this.currentIndex = this.focusableElements.length - 1\r\n      this.focusableElements[this.currentIndex].focus()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 聚焦下一个元素\r\n   */\r\n  focusNext() {\r\n    if (this.focusableElements.length === 0) return\r\n    \r\n    this.currentIndex = (this.currentIndex + 1) % this.focusableElements.length\r\n    this.focusableElements[this.currentIndex].focus()\r\n  }\r\n  \r\n  /**\r\n   * 聚焦上一个元素\r\n   */\r\n  focusPrevious() {\r\n    if (this.focusableElements.length === 0) return\r\n    \r\n    this.currentIndex = this.currentIndex <= 0 \r\n      ? this.focusableElements.length - 1 \r\n      : this.currentIndex - 1\r\n    \r\n    this.focusableElements[this.currentIndex].focus()\r\n  }\r\n  \r\n  /**\r\n   * 捕获焦点\r\n   */\r\n  trapFocus() {\r\n    if (!this.container) return\r\n    \r\n    const handleKeydown = (e: KeyboardEvent) => {\r\n      if (e.key !== 'Tab') return\r\n      \r\n      const isShift = e.shiftKey\r\n      const activeElement = document.activeElement\r\n      \r\n      if (!this.container?.contains(activeElement as Node)) {\r\n        e.preventDefault()\r\n        if (isShift) {\r\n          this.focusLast()\r\n        } else {\r\n          this.focusFirst()\r\n        }\r\n        return\r\n      }\r\n      \r\n      const currentIndex = this.focusableElements.indexOf(activeElement as HTMLElement)\r\n      \r\n      if (isShift && currentIndex === 0) {\r\n        e.preventDefault()\r\n        this.focusLast()\r\n      } else if (!isShift && currentIndex === this.focusableElements.length - 1) {\r\n        e.preventDefault()\r\n        this.focusFirst()\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('keydown', handleKeydown)\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeydown)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 恢复原始焦点\r\n   */\r\n  restoreFocus() {\r\n    if (this.originalFocus && this.originalFocus.focus) {\r\n      this.originalFocus.focus()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 清理\r\n   */\r\n  cleanup() {\r\n    this.restoreFocus()\r\n    this.focusableElements = []\r\n    this.currentIndex = -1\r\n    this.container = null\r\n    this.originalFocus = null\r\n  }\r\n}\r\n\r\n/**\r\n * 屏幕阅读器公告\r\n */\r\nclass ScreenReaderAnnouncer {\r\n  private liveRegion: HTMLElement | null = null\r\n  private announceTimer: ReturnType<typeof setTimeout> | null = null\r\n  \r\n  /**\r\n   * 初始化\r\n   */\r\n  init(mode: 'polite' | 'assertive' | 'off' = 'polite') {\r\n    if (mode === 'off') return\r\n    \r\n    this.liveRegion = document.createElement('div')\r\n    this.liveRegion.setAttribute('aria-live', mode)\r\n    this.liveRegion.setAttribute('aria-atomic', 'true')\r\n    this.liveRegion.style.position = 'absolute'\r\n    this.liveRegion.style.left = '-10000px'\r\n    this.liveRegion.style.width = '1px'\r\n    this.liveRegion.style.height = '1px'\r\n    this.liveRegion.style.overflow = 'hidden'\r\n    \r\n    document.body.appendChild(this.liveRegion)\r\n  }\r\n  \r\n  /**\r\n   * 发布公告\r\n   */\r\n  announce(message: string, delay: number = 100) {\r\n    if (!this.liveRegion) return\r\n    \r\n    // 清理之前的定时器\r\n    if (this.announceTimer) {\r\n      clearTimeout(this.announceTimer)\r\n      this.announceTimer = null\r\n    }\r\n    \r\n    // 清空当前内容，确保变化能被检测到\r\n    this.liveRegion.textContent = ''\r\n    \r\n    // 延迟后设置新内容，确保屏幕阅读器能够检测到变化\r\n    this.announceTimer = setTimeout(() => {\r\n      if (this.liveRegion) {\r\n        this.liveRegion.textContent = message\r\n      }\r\n      this.announceTimer = null\r\n    }, delay)\r\n  }\r\n  \r\n  /**\r\n   * 清理\r\n   */\r\n  cleanup() {\r\n    if (this.announceTimer) {\r\n      clearTimeout(this.announceTimer)\r\n      this.announceTimer = null\r\n    }\r\n    if (this.liveRegion && this.liveRegion.parentNode) {\r\n      this.liveRegion.parentNode.removeChild(this.liveRegion)\r\n    }\r\n    this.liveRegion = null\r\n  }\r\n}\r\n\r\n/**\r\n * 使用模板无障碍支持\r\n */\r\nexport function useTemplateA11y(config: A11yConfig = {}) {\r\n  const focusManager = new FocusManager()\r\n  const announcer = new ScreenReaderAnnouncer()\r\n  \r\n  const containerRef = ref<HTMLElement | null>(null)\r\n  const isHighContrast = ref(config.highContrast || false)\r\n  const isReducedMotion = ref(config.reducedMotion || false)\r\n  const isScreenReaderMode = ref(config.screenReaderMode || false)\r\n  \r\n  let cleanupFunctions: (() => void)[] = []\r\n  \r\n  /**\r\n   * 设置容器\r\n   */\r\n  const setContainer = (element: HTMLElement) => {\r\n    containerRef.value = element\r\n    \r\n    if (config.keyboardNavigation) {\r\n      focusManager.init(element)\r\n      \r\n      if (config.trapFocus) {\r\n        const cleanup = focusManager.trapFocus()\r\n        if (cleanup) cleanupFunctions.push(cleanup)\r\n      }\r\n    }\r\n    \r\n    // 设置 ARIA 属性\r\n    if (config.ariaLabels) {\r\n      Object.entries(config.ariaLabels).forEach(([key, value]) => {\r\n        const el = element.querySelector(`[data-a11y=\"${key}\"]`)\r\n        if (el) el.setAttribute('aria-label', value)\r\n      })\r\n    }\r\n    \r\n    if (config.ariaDescriptions) {\r\n      Object.entries(config.ariaDescriptions).forEach(([key, value]) => {\r\n        const el = element.querySelector(`[data-a11y=\"${key}\"]`)\r\n        if (el) el.setAttribute('aria-describedby', value)\r\n      })\r\n    }\r\n    \r\n    // 设置语义化属性\r\n    if (config.landmark) {\r\n      element.setAttribute('role', config.landmark)\r\n    }\r\n    \r\n    if (config.headingLevel) {\r\n      const headings = element.querySelectorAll('h1, h2, h3, h4, h5, h6')\r\n      headings.forEach(heading => {\r\n        heading.setAttribute('aria-level', String(config.headingLevel))\r\n      })\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 注册快捷键\r\n   */\r\n  const registerShortcuts = () => {\r\n    if (!config.shortcuts) return\r\n    \r\n    const handleKeydown = (e: KeyboardEvent) => {\r\n      const key = [\r\n        e.ctrlKey && 'ctrl',\r\n        e.altKey && 'alt',\r\n        e.shiftKey && 'shift',\r\n        e.metaKey && 'meta',\r\n        e.key.toLowerCase()\r\n      ].filter(Boolean).join('+')\r\n      \r\n      const handler = config.shortcuts![key]\r\n      if (handler) {\r\n        e.preventDefault()\r\n        handler()\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('keydown', handleKeydown)\r\n    cleanupFunctions.push(() => {\r\n      document.removeEventListener('keydown', handleKeydown)\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * 检测用户偏好\r\n   */\r\n  const detectUserPreferences = () => {\r\n    // 检测高对比度\r\n    if (window.matchMedia) {\r\n      const highContrastQuery = window.matchMedia('(prefers-contrast: high)')\r\n      isHighContrast.value = highContrastQuery.matches\r\n      \r\n      const handleHighContrastChange = (e: MediaQueryListEvent) => {\r\n        isHighContrast.value = e.matches\r\n      }\r\n      \r\n      highContrastQuery.addEventListener('change', handleHighContrastChange)\r\n      cleanupFunctions.push(() => {\r\n        highContrastQuery.removeEventListener('change', handleHighContrastChange)\r\n      })\r\n      \r\n      // 检测减少动画\r\n      const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)')\r\n      isReducedMotion.value = reducedMotionQuery.matches\r\n      \r\n      const handleReducedMotionChange = (e: MediaQueryListEvent) => {\r\n        isReducedMotion.value = e.matches\r\n      }\r\n      \r\n      reducedMotionQuery.addEventListener('change', handleReducedMotionChange)\r\n      cleanupFunctions.push(() => {\r\n        reducedMotionQuery.removeEventListener('change', handleReducedMotionChange)\r\n      })\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 公告消息\r\n   */\r\n  const announce = (message: string) => {\r\n    if (config.announceChanges) {\r\n      announcer.announce(message)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 聚焦管理\r\n   */\r\n  const focus = {\r\n    first: () => focusManager.focusFirst(),\r\n    last: () => focusManager.focusLast(),\r\n    next: () => focusManager.focusNext(),\r\n    previous: () => focusManager.focusPrevious(),\r\n    restore: () => focusManager.restoreFocus(),\r\n    update: () => focusManager.updateFocusableElements()\r\n  }\r\n  \r\n  /**\r\n   * 应用无障碍样式\r\n   */\r\n  const applyA11yStyles = () => {\r\n    if (!containerRef.value) return\r\n    \r\n    const element = containerRef.value\r\n    \r\n    // 高对比度\r\n    if (isHighContrast.value) {\r\n      element.classList.add('high-contrast')\r\n    } else {\r\n      element.classList.remove('high-contrast')\r\n    }\r\n    \r\n    // 减少动画\r\n    if (isReducedMotion.value) {\r\n      element.classList.add('reduced-motion')\r\n    } else {\r\n      element.classList.remove('reduced-motion')\r\n    }\r\n    \r\n    // 焦点指示器\r\n    if (config.focusIndicator) {\r\n      element.classList.add('focus-visible')\r\n    }\r\n    \r\n    // 屏幕阅读器模式\r\n    if (isScreenReaderMode.value) {\r\n      element.classList.add('screen-reader-mode')\r\n    } else {\r\n      element.classList.remove('screen-reader-mode')\r\n    }\r\n  }\r\n  \r\n  // 监听配置变化\r\n  watch([isHighContrast, isReducedMotion, isScreenReaderMode], () => {\r\n    applyA11yStyles()\r\n  })\r\n  \r\n  // 初始化\r\n  onMounted(() => {\r\n    if (config.announceChanges) {\r\n      announcer.init(config.liveRegion || 'polite')\r\n    }\r\n    \r\n    detectUserPreferences()\r\n    registerShortcuts()\r\n    \r\n    nextTick(() => {\r\n      applyA11yStyles()\r\n    })\r\n  })\r\n  \r\n  // 清理\r\n  onUnmounted(() => {\r\n    focusManager.cleanup()\r\n    announcer.cleanup()\r\n    cleanupFunctions.forEach(fn => fn())\r\n    cleanupFunctions = []\r\n  })\r\n  \r\n  return {\r\n    setContainer,\r\n    announce,\r\n    focus,\r\n    isHighContrast: computed(() => isHighContrast.value),\r\n    isReducedMotion: computed(() => isReducedMotion.value),\r\n    isScreenReaderMode: computed(() => isScreenReaderMode.value),\r\n    toggleHighContrast: () => { isHighContrast.value = !isHighContrast.value },\r\n    toggleReducedMotion: () => { isReducedMotion.value = !isReducedMotion.value },\r\n    toggleScreenReaderMode: () => { isScreenReaderMode.value = !isScreenReaderMode.value }\r\n  }\r\n}\r\n\r\n/**\r\n * 创建无障碍样式\r\n */\r\nexport function createA11yStyles(): string {\r\n  return `\r\n    /* 高对比度模式 */\r\n    .high-contrast {\r\n      filter: contrast(1.5);\r\n    }\r\n    \r\n    .high-contrast * {\r\n      border-width: 2px !important;\r\n    }\r\n    \r\n    .high-contrast button,\r\n    .high-contrast a,\r\n    .high-contrast input,\r\n    .high-contrast select,\r\n    .high-contrast textarea {\r\n      outline: 2px solid currentColor !important;\r\n      outline-offset: 2px !important;\r\n    }\r\n    \r\n    /* 减少动画模式 */\r\n    .reduced-motion *,\r\n    .reduced-motion *::before,\r\n    .reduced-motion *::after {\r\n      animation-duration: 0.01ms !important;\r\n      animation-iteration-count: 1 !important;\r\n      transition-duration: 0.01ms !important;\r\n    }\r\n    \r\n    /* 焦点指示器 */\r\n    .focus-visible :focus {\r\n      outline: 3px solid #4A90E2 !important;\r\n      outline-offset: 2px !important;\r\n    }\r\n    \r\n    .focus-visible :focus:not(:focus-visible) {\r\n      outline: none !important;\r\n    }\r\n    \r\n    /* 屏幕阅读器模式 */\r\n    .screen-reader-mode .sr-only {\r\n      position: absolute;\r\n      width: 1px;\r\n      height: 1px;\r\n      padding: 0;\r\n      margin: -1px;\r\n      overflow: hidden;\r\n      clip: rect(0, 0, 0, 0);\r\n      white-space: nowrap;\r\n      border-width: 0;\r\n    }\r\n    \r\n    .screen-reader-mode .sr-only-focusable:focus {\r\n      position: static;\r\n      width: auto;\r\n      height: auto;\r\n      padding: inherit;\r\n      margin: inherit;\r\n      overflow: visible;\r\n      clip: auto;\r\n      white-space: normal;\r\n    }\r\n    \r\n    /* 跳转链接 */\r\n    .skip-link {\r\n      position: absolute;\r\n      top: -40px;\r\n      left: 0;\r\n      background: #000;\r\n      color: #fff;\r\n      padding: 8px;\r\n      text-decoration: none;\r\n      z-index: 100;\r\n    }\r\n    \r\n    .skip-link:focus {\r\n      top: 0;\r\n    }\r\n  `\r\n}"],"names":["FocusManager","constructor","focusableElements","currentIndex","container","originalFocus","init","document","activeElement","updateFocusableElements","selector","join","Array","from","querySelectorAll","focusFirst","length","focus","focusLast","focusNext","focusPrevious","trapFocus","handleKeydown","e","key","isShift","shiftKey","contains","preventDefault","indexOf","addEventListener","removeEventListener","restoreFocus","cleanup","ScreenReaderAnnouncer","liveRegion","announceTimer","mode","createElement","setAttribute","style","position","left","width","height","overflow","body","appendChild","announce","message","delay","clearTimeout","textContent","setTimeout","parentNode","removeChild","useTemplateA11y","config","focusManager","announcer","containerRef","ref","isHighContrast","highContrast","isReducedMotion","reducedMotion","isScreenReaderMode","screenReaderMode","cleanupFunctions","setContainer","element","value","keyboardNavigation","push","ariaLabels","Object","entries","forEach","el","querySelector","ariaDescriptions","landmark","headingLevel","headings","heading","String","registerShortcuts","shortcuts","ctrlKey","altKey","metaKey","toLowerCase","filter","Boolean","handler","detectUserPreferences","window","matchMedia","highContrastQuery","matches","handleHighContrastChange","reducedMotionQuery","handleReducedMotionChange","announceChanges","first","last","next","previous","restore","update","applyA11yStyles","classList","add","remove","focusIndicator","watch","onMounted","nextTick","onUnmounted","fn","computed","toggleHighContrast","toggleReducedMotion","toggleScreenReaderMode","createA11yStyles"],"mappings":"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"}