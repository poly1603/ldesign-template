{"version":3,"file":"useTemplateTheme.cjs","sources":["../../src/composables/useTemplateTheme.ts"],"sourcesContent":["/**\n * 模板主题系统\n * \n * 支持多主题切换、自定义主题、主题继承等功能\n */\n\nimport type { InjectionKey, Ref } from 'vue'\nimport { computed, inject, provide, readonly, ref } from 'vue'\n\n/**\n * 主题配置\n */\nexport interface TemplateTheme {\n  name: string\n  displayName?: string\n  colors: {\n    primary: string\n    secondary?: string\n    success?: string\n    warning?: string\n    error?: string\n    info?: string\n    background?: string\n    surface?: string\n    text?: string\n    textSecondary?: string\n    border?: string\n    [key: string]: string | undefined\n  }\n  fonts?: {\n    primary?: string\n    secondary?: string\n    mono?: string\n    [key: string]: string | undefined\n  }\n  spacing?: {\n    xs?: string\n    sm?: string\n    md?: string\n    lg?: string\n    xl?: string\n    [key: string]: string | undefined\n  }\n  borderRadius?: {\n    none?: string\n    sm?: string\n    md?: string\n    lg?: string\n    full?: string\n    [key: string]: string | undefined\n  }\n  shadows?: {\n    none?: string\n    sm?: string\n    md?: string\n    lg?: string\n    xl?: string\n    [key: string]: string | undefined\n  }\n  breakpoints?: {\n    xs?: string\n    sm?: string\n    md?: string\n    lg?: string\n    xl?: string\n    [key: string]: string | undefined\n  }\n  transitions?: {\n    fast?: string\n    normal?: string\n    slow?: string\n    [key: string]: string | undefined\n  }\n  extends?: string // 继承自哪个主题\n  cssVars?: Record<string, string> // 自定义CSS变量\n}\n\n/**\n * 预设主题\n */\nexport const PRESET_THEMES: Record<string, TemplateTheme> = {\n  light: {\n    name: 'light',\n    displayName: 'Light',\n    colors: {\n      primary: '#667eea',\n      secondary: '#764ba2',\n      success: '#48bb78',\n      warning: '#f6ad55',\n      error: '#f56565',\n      info: '#4299e1',\n      background: '#ffffff',\n      surface: '#f7fafc',\n      text: '#1a202c',\n      textSecondary: '#718096',\n      border: '#e2e8f0'\n    },\n    fonts: {\n      primary: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n      mono: 'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace'\n    },\n    spacing: {\n      xs: '0.25rem',\n      sm: '0.5rem',\n      md: '1rem',\n      lg: '1.5rem',\n      xl: '2rem'\n    },\n    borderRadius: {\n      none: '0',\n      sm: '0.125rem',\n      md: '0.25rem',\n      lg: '0.5rem',\n      full: '9999px'\n    },\n    shadows: {\n      none: 'none',\n      sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n      md: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n      lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n      xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'\n    },\n    transitions: {\n      fast: '150ms ease-in-out',\n      normal: '250ms ease-in-out',\n      slow: '350ms ease-in-out'\n    }\n  },\n  dark: {\n    name: 'dark',\n    displayName: 'Dark',\n    extends: 'light',\n    colors: {\n      primary: '#9f7aea',\n      secondary: '#975ba5',\n      success: '#68d391',\n      warning: '#fbb040',\n      error: '#fc8181',\n      info: '#63b3ed',\n      background: '#1a202c',\n      surface: '#2d3748',\n      text: '#f7fafc',\n      textSecondary: '#cbd5e0',\n      border: '#4a5568'\n    }\n  },\n  blue: {\n    name: 'blue',\n    displayName: 'Blue Ocean',\n    extends: 'light',\n    colors: {\n      primary: '#3182ce',\n      secondary: '#2c5282',\n      success: '#38a169',\n      warning: '#d69e2e',\n      error: '#e53e3e',\n      info: '#3182ce',\n      background: '#f0f4f8',\n      surface: '#ffffff',\n      text: '#2d3748',\n      textSecondary: '#4a5568',\n      border: '#cbd5e0'\n    }\n  },\n  green: {\n    name: 'green',\n    displayName: 'Forest Green',\n    extends: 'light',\n    colors: {\n      primary: '#48bb78',\n      secondary: '#38a169',\n      success: '#48bb78',\n      warning: '#ed8936',\n      error: '#f56565',\n      info: '#4299e1',\n      background: '#f0fff4',\n      surface: '#ffffff',\n      text: '#1a202c',\n      textSecondary: '#2d3748',\n      border: '#9ae6b4'\n    }\n  }\n}\n\n/**\n * 主题上下文\n */\nexport interface ThemeContext {\n  currentTheme: Ref<string>\n  themes: Map<string, TemplateTheme>\n  setTheme: (themeName: string) => void\n  registerTheme: (theme: TemplateTheme) => void\n  createCustomTheme: (name: string, overrides: Partial<TemplateTheme>) => TemplateTheme\n  applyTheme: (theme: TemplateTheme) => void\n  getTheme: (name: string) => TemplateTheme | undefined\n  removeTheme: (name: string) => boolean\n}\n\nconst ThemeContextKey: InjectionKey<ThemeContext> = Symbol('TemplateThemeContext')\n\n/**\n * 创建主题管理器\n */\nexport function createThemeManager(defaultTheme: string = 'light') {\n  const themes = new Map<string, TemplateTheme>()\n  const currentTheme = ref(defaultTheme)\n  const appliedTheme = ref<TemplateTheme | null>(null)\n  \n  // 注册预设主题\n  Object.values(PRESET_THEMES).forEach(theme => {\n    themes.set(theme.name, theme)\n  })\n  \n  /**\n   * 解析主题（处理继承）\n   */\n  const resolveTheme = (theme: TemplateTheme): TemplateTheme => {\n    if (!theme.extends) return theme\n    \n    const parentTheme = themes.get(theme.extends)\n    if (!parentTheme) return theme\n    \n    const resolvedParent = resolveTheme(parentTheme)\n    \n    return {\n      ...resolvedParent,\n      ...theme,\n      colors: { ...resolvedParent.colors, ...theme.colors },\n      fonts: { ...resolvedParent.fonts, ...theme.fonts },\n      spacing: { ...resolvedParent.spacing, ...theme.spacing },\n      borderRadius: { ...resolvedParent.borderRadius, ...theme.borderRadius },\n      shadows: { ...resolvedParent.shadows, ...theme.shadows },\n      breakpoints: { ...resolvedParent.breakpoints, ...theme.breakpoints },\n      transitions: { ...resolvedParent.transitions, ...theme.transitions },\n      cssVars: { ...resolvedParent.cssVars, ...theme.cssVars }\n    }\n  }\n  \n  /**\n   * 应用主题到DOM\n   */\n  const applyTheme = (theme: TemplateTheme) => {\n    const resolved = resolveTheme(theme)\n    appliedTheme.value = resolved\n    \n    if (typeof document === 'undefined') return\n    \n    const root = document.documentElement\n    \n    // 应用颜色\n    Object.entries(resolved.colors).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-color-${key}`, value)\n    })\n    \n    // 应用字体\n    Object.entries(resolved.fonts || {}).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-font-${key}`, value)\n    })\n    \n    // 应用间距\n    Object.entries(resolved.spacing || {}).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-spacing-${key}`, value)\n    })\n    \n    // 应用圆角\n    Object.entries(resolved.borderRadius || {}).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-radius-${key}`, value)\n    })\n    \n    // 应用阴影\n    Object.entries(resolved.shadows || {}).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-shadow-${key}`, value)\n    })\n    \n    // 应用过渡\n    Object.entries(resolved.transitions || {}).forEach(([key, value]) => {\n      if (value) root.style.setProperty(`--template-transition-${key}`, value)\n    })\n    \n    // 应用自定义CSS变量\n    Object.entries(resolved.cssVars || {}).forEach(([key, value]) => {\n      root.style.setProperty(key, value)\n    })\n    \n    // 设置主题属性\n    root.setAttribute('data-template-theme', resolved.name)\n  }\n  \n  /**\n   * 设置当前主题\n   */\n  const setTheme = (themeName: string) => {\n    const theme = themes.get(themeName)\n    if (!theme) {\n      console.warn(`Theme \"${themeName}\" not found`)\n      return\n    }\n    \n    currentTheme.value = themeName\n    applyTheme(theme)\n    \n    // 保存到localStorage\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem('template-theme', themeName)\n    }\n  }\n  \n  /**\n   * 注册新主题\n   */\n  const registerTheme = (theme: TemplateTheme) => {\n    themes.set(theme.name, theme)\n  }\n  \n  /**\n   * 创建自定义主题\n   */\n  const createCustomTheme = (\n    name: string,\n    overrides: Partial<TemplateTheme>\n  ): TemplateTheme => {\n    const baseTheme = themes.get(overrides.extends || 'light') || PRESET_THEMES.light\n    \n    const customTheme: TemplateTheme = {\n      ...baseTheme,\n      ...overrides,\n      name,\n      colors: { ...baseTheme.colors, ...overrides.colors },\n      fonts: { ...baseTheme.fonts, ...overrides.fonts },\n      spacing: { ...baseTheme.spacing, ...overrides.spacing },\n      borderRadius: { ...baseTheme.borderRadius, ...overrides.borderRadius },\n      shadows: { ...baseTheme.shadows, ...overrides.shadows },\n      breakpoints: { ...baseTheme.breakpoints, ...overrides.breakpoints },\n      transitions: { ...baseTheme.transitions, ...overrides.transitions },\n      cssVars: { ...baseTheme.cssVars, ...overrides.cssVars }\n    }\n    \n    registerTheme(customTheme)\n    return customTheme\n  }\n  \n  /**\n   * 获取主题\n   */\n  const getTheme = (name: string): TemplateTheme | undefined => {\n    return themes.get(name)\n  }\n  \n  /**\n   * 移除主题\n   */\n  const removeTheme = (name: string): boolean => {\n    if (PRESET_THEMES[name]) {\n      console.warn(`Cannot remove preset theme \"${name}\"`)\n      return false\n    }\n    return themes.delete(name)\n  }\n  \n  // 初始化：从localStorage恢复主题\n  if (typeof localStorage !== 'undefined') {\n    const savedTheme = localStorage.getItem('template-theme')\n    if (savedTheme && themes.has(savedTheme)) {\n      setTheme(savedTheme)\n    } else {\n      setTheme(defaultTheme)\n    }\n  } else {\n    setTheme(defaultTheme)\n  }\n  \n  // 监听系统主题变化\n  let darkModeQuery: MediaQueryList | null = null\n  let handleSystemThemeChange: ((e: MediaQueryListEvent) => void) | null = null\n  \n  if (typeof window !== 'undefined' && window.matchMedia) {\n    darkModeQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    \n    handleSystemThemeChange = (e: MediaQueryListEvent) => {\n      if (currentTheme.value === 'auto') {\n        setTheme(e.matches ? 'dark' : 'light')\n      }\n    }\n    \n    darkModeQuery.addEventListener('change', handleSystemThemeChange)\n  }\n  \n  // 清理函数\n  const cleanup = () => {\n    if (darkModeQuery && handleSystemThemeChange) {\n      darkModeQuery.removeEventListener('change', handleSystemThemeChange)\n    }\n  }\n  \n  return {\n    currentTheme: readonly(currentTheme),\n    themes,\n    setTheme,\n    registerTheme,\n    createCustomTheme,\n    applyTheme,\n    getTheme,\n    removeTheme,\n    appliedTheme: readonly(appliedTheme),\n    cleanup\n  }\n}\n\n/**\n * 使用模板主题\n */\nexport function useTemplateTheme() {\n  let context = inject<ThemeContext | undefined>(ThemeContextKey, undefined)\n  \n  if (!context) {\n    // 创建默认主题管理器\n    const manager = createThemeManager()\n    context = {\n      currentTheme: manager.currentTheme as Ref<string>,\n      themes: manager.themes,\n      setTheme: manager.setTheme,\n      registerTheme: manager.registerTheme,\n      createCustomTheme: manager.createCustomTheme,\n      applyTheme: manager.applyTheme,\n      getTheme: manager.getTheme,\n      removeTheme: manager.removeTheme\n    }\n  }\n  \n  const isDark = computed(() => context!.currentTheme.value === 'dark')\n  const isLight = computed(() => context!.currentTheme.value === 'light')\n  \n  const toggleTheme = () => {\n    context!.setTheme(isDark.value ? 'light' : 'dark')\n  }\n  \n  const currentThemeConfig = computed(() => {\n    return context!.getTheme(context!.currentTheme.value)\n  })\n  \n  return {\n    ...context,\n    isDark,\n    isLight,\n    toggleTheme,\n    currentThemeConfig\n  }\n}\n\n/**\n * 提供主题上下文\n */\nexport function provideTemplateTheme(defaultTheme?: string) {\n  const manager = createThemeManager(defaultTheme)\n  \n  const context: ThemeContext = {\n    currentTheme: manager.currentTheme as Ref<string>,\n    themes: manager.themes,\n    setTheme: manager.setTheme,\n    registerTheme: manager.registerTheme,\n    createCustomTheme: manager.createCustomTheme,\n    applyTheme: manager.applyTheme,\n    getTheme: manager.getTheme,\n    removeTheme: manager.removeTheme\n  }\n  \n  provide(ThemeContextKey, context)\n  \n  return context\n}"],"names":["PRESET_THEMES","light","name","displayName","colors","primary","secondary","success","warning","error","info","background","surface","text","textSecondary","border","fonts","mono","spacing","xs","sm","md","lg","xl","borderRadius","none","full","shadows","transitions","fast","normal","slow","dark","extends","blue","green","ThemeContextKey","Symbol","createThemeManager","defaultTheme","themes","Map","currentTheme","ref","appliedTheme","Object","values","forEach","theme","set","resolveTheme","parentTheme","get","resolvedParent","breakpoints","cssVars","applyTheme","resolved","value","document","root","documentElement","entries","key","style","setProperty","setAttribute","setTheme","themeName","console","warn","localStorage","setItem","registerTheme","createCustomTheme","overrides","baseTheme","customTheme","getTheme","removeTheme","delete","savedTheme","getItem","has","darkModeQuery","handleSystemThemeChange","window","matchMedia","e","matches","addEventListener","cleanup","removeEventListener","readonly","useTemplateTheme","context","inject","undefined","manager","isDark","computed","isLight","toggleTheme","currentThemeConfig","provideTemplateTheme","provide"],"mappings":"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"}