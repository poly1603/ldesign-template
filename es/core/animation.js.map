{"version":3,"file":"animation.js","sources":["../../src/core/animation.ts"],"sourcesContent":["/**\n * 模板动画系统\n */\n\nimport type { CSSProperties } from 'vue'\nimport { reactive } from 'vue'\n\n/**\n * 动画类型\n */\nexport type AnimationType = \n  | 'fade'\n  | 'slide'\n  | 'scale'\n  | 'rotate'\n  | 'flip'\n  | 'bounce'\n  | 'shake'\n  | 'pulse'\n  | 'parallax'\n  | 'morph'\n  | 'reveal'\n  | 'typewriter'\n  | 'gradient'\n  | 'blur'\n  | 'custom'\n\n/**\n * 动画方向\n */\nexport type AnimationDirection = \n  | 'up' \n  | 'down' \n  | 'left' \n  | 'right' \n  | 'in' \n  | 'out'\n\n/**\n * 缓动函数\n */\nexport type EasingFunction = \n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | 'cubic-bezier'\n  | 'spring'\n  | 'elastic'\n  | 'bounce'\n\n/**\n * 动画配置\n */\nexport interface AnimationConfig {\n  /**\n   * 动画类型\n   */\n  type: AnimationType\n  \n  /**\n   * 动画时长（毫秒）\n   */\n  duration?: number\n  \n  /**\n   * 延迟时间（毫秒）\n   */\n  delay?: number\n  \n  /**\n   * 缓动函数\n   */\n  easing?: EasingFunction | string\n  \n  /**\n   * 动画方向\n   */\n  direction?: AnimationDirection\n  \n  /**\n   * 迭代次数\n   */\n  iterations?: number | 'infinite'\n  \n  /**\n   * 是否自动播放\n   */\n  autoPlay?: boolean\n  \n  /**\n   * 填充模式\n   */\n  fillMode?: 'none' | 'forwards' | 'backwards' | 'both'\n  \n  /**\n   * 自定义属性\n   */\n  properties?: Record<string, any>\n}\n\n/**\n * 手势配置\n */\nexport interface GestureConfig {\n  /**\n   * 是否启用拖拽\n   */\n  drag?: boolean\n  \n  /**\n   * 是否启用旋转\n   */\n  rotate?: boolean\n  \n  /**\n   * 是否启用缩放\n   */\n  scale?: boolean\n  \n  /**\n   * 是否启用滑动\n   */\n  swipe?: boolean\n  \n  /**\n   * 拖拽约束\n   */\n  dragConstraints?: {\n    top?: number\n    bottom?: number\n    left?: number\n    right?: number\n  }\n  \n  /**\n   * 弹性系数\n   */\n  dragElastic?: number\n  \n  /**\n   * 动量\n   */\n  dragMomentum?: boolean\n  \n  /**\n   * 滑动阈值\n   */\n  swipeThreshold?: number\n  \n  /**\n   * 滑动速度\n   */\n  swipeVelocity?: number\n}\n\n/**\n * 视差配置\n */\nexport interface ParallaxConfig {\n  /**\n   * 速度系数\n   */\n  speed?: number\n  \n  /**\n   * 偏移量\n   */\n  offset?: number\n  \n  /**\n   * 是否启用水平视差\n   */\n  horizontal?: boolean\n  \n  /**\n   * 是否启用垂直视差\n   */\n  vertical?: boolean\n  \n  /**\n   * 是否启用旋转\n   */\n  rotate?: boolean\n  \n  /**\n   * 是否启用缩放\n   */\n  scale?: boolean\n  \n  /**\n   * 最大偏移量\n   */\n  maxOffset?: number\n  \n  /**\n   * 触发元素\n   */\n  trigger?: string | HTMLElement\n  \n  /**\n   * 是否平滑过渡\n   */\n  smooth?: boolean\n}\n\n/**\n * 滚动动画配置\n */\nexport interface ScrollAnimationConfig {\n  /**\n   * 触发位置\n   */\n  trigger?: 'top' | 'center' | 'bottom'\n  \n  /**\n   * 触发偏移\n   */\n  offset?: number\n  \n  /**\n   * 是否只触发一次\n   */\n  once?: boolean\n  \n  /**\n   * 滚动方向\n   */\n  direction?: 'up' | 'down' | 'both'\n  \n  /**\n   * 进入动画\n   */\n  enter?: AnimationConfig\n  \n  /**\n   * 离开动画\n   */\n  leave?: AnimationConfig\n  \n  /**\n   * 进度回调\n   */\n  onProgress?: (progress: number) => void\n}\n\n/**\n * 动画状态\n */\nexport interface AnimationState {\n  /**\n   * 是否正在播放\n   */\n  playing: boolean\n  \n  /**\n   * 是否暂停\n   */\n  paused: boolean\n  \n  /**\n   * 当前进度 (0-1)\n   */\n  progress: number\n  \n  /**\n   * 当前迭代次数\n   */\n  iteration: number\n  \n  /**\n   * 是否完成\n   */\n  finished: boolean\n}\n\n/**\n * 动画控制器\n */\nexport class AnimationController {\n  private animations: Map<string, Animation>\n  private rafId: number | null = null\n  private startTime: number = 0\n  private disposed = false\n  \n  constructor() {\n    this.animations = new Map()\n  }\n  \n  /**\n   * 创建动画\n   */\n  create(id: string, element: HTMLElement, config: AnimationConfig): Animation {\n    const animation = new Animation(element, config)\n    this.animations.set(id, animation)\n    return animation\n  }\n  \n  /**\n   * 播放动画\n   */\n  play(id: string) {\n    const animation = this.animations.get(id)\n    if (animation) {\n      animation.play()\n    }\n  }\n  \n  /**\n   * 暂停动画\n   */\n  pause(id: string) {\n    const animation = this.animations.get(id)\n    if (animation) {\n      animation.pause()\n    }\n  }\n  \n  /**\n   * 停止动画\n   */\n  stop(id: string) {\n    const animation = this.animations.get(id)\n    if (animation) {\n      animation.stop()\n    }\n  }\n  \n  /**\n   * 重置动画\n   */\n  reset(id: string) {\n    const animation = this.animations.get(id)\n    if (animation) {\n      animation.reset()\n    }\n  }\n  \n  /**\n   * 销毁动画\n   */\n  destroy(id: string) {\n    const animation = this.animations.get(id)\n    if (animation) {\n      animation.destroy()\n      this.animations.delete(id)\n    }\n  }\n  \n  /**\n   * 销毁所有动画\n   */\n  destroyAll() {\n    if (this.disposed) return\n    \n    this.animations.forEach(animation => animation.destroy())\n    this.animations.clear()\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n      this.rafId = null\n    }\n    this.disposed = true\n  }\n}\n\n/**\n * 单个动画实例\n */\nexport class Animation {\n  private element: HTMLElement\n  private config: AnimationConfig\n  private state: AnimationState\n  private animation: globalThis.Animation | null = null\n  private initialStyles: CSSProperties = {}\n  \n  constructor(element: HTMLElement, config: AnimationConfig) {\n    this.element = element\n    this.config = config\n    this.state = reactive({\n      playing: false,\n      paused: false,\n      progress: 0,\n      iteration: 0,\n      finished: false\n    })\n    \n    this.saveInitialStyles()\n    if (config.autoPlay) {\n      this.play()\n    }\n  }\n  \n  /**\n   * 保存初始样式\n   */\n  private saveInitialStyles() {\n    const computedStyles = window.getComputedStyle(this.element)\n    this.initialStyles = {\n      transform: computedStyles.transform,\n      opacity: computedStyles.opacity,\n      filter: computedStyles.filter\n    }\n  }\n  \n  /**\n   * 获取关键帧\n   */\n  private getKeyframes(): Keyframe[] {\n    const { type, direction, properties } = this.config\n    \n    switch (type) {\n      case 'fade':\n        return [\n          { opacity: direction === 'out' ? 1 : 0 },\n          { opacity: direction === 'out' ? 0 : 1 }\n        ]\n      \n      case 'slide': {\n        const distance = properties?.distance || 100\n        const translateMap: Record<string, string> = {\n          up: `translateY(${distance}px)`,\n          down: `translateY(-${distance}px)`,\n          left: `translateX(${distance}px)`,\n          right: `translateX(-${distance}px)`\n        }\n        return [\n          { transform: translateMap[direction || 'up'] || 'none' },\n          { transform: 'translateX(0) translateY(0)' }\n        ]\n      }\n      \n      case 'scale':\n        return [\n          { transform: direction === 'out' ? 'scale(1)' : 'scale(0)' },\n          { transform: direction === 'out' ? 'scale(0)' : 'scale(1)' }\n        ]\n      \n      case 'rotate': {\n        const degrees = properties?.degrees || 360\n        return [\n          { transform: 'rotate(0deg)' },\n          { transform: `rotate(${degrees}deg)` }\n        ]\n      }\n      \n      case 'flip': {\n        const axis = properties?.axis || 'Y'\n        return [\n          { transform: `rotate${axis}(0deg)` },\n          { transform: `rotate${axis}(180deg)` }\n        ]\n      }\n      \n      case 'custom':\n        return properties?.keyframes || []\n      \n      default:\n        return []\n    }\n  }\n  \n  /**\n   * 获取动画选项\n   */\n  private getAnimationOptions(): KeyframeAnimationOptions {\n    const { duration, delay, easing, iterations, fillMode } = this.config\n    \n    return {\n      duration: duration || 300,\n      delay: delay || 0,\n      easing: this.getEasing(easing),\n      iterations: iterations === 'infinite' ? Infinity : (iterations || 1),\n      fill: fillMode || 'both'\n    }\n  }\n  \n  /**\n   * 获取缓动函数\n   */\n  private getEasing(easing?: EasingFunction | string): string {\n    if (!easing) return 'ease'\n    \n    const easingMap: Record<EasingFunction, string> = {\n      linear: 'linear',\n      ease: 'ease',\n      'ease-in': 'ease-in',\n      'ease-out': 'ease-out',\n      'ease-in-out': 'ease-in-out',\n      'cubic-bezier': 'cubic-bezier(0.4, 0, 0.2, 1)',\n      spring: 'cubic-bezier(0.5, 1.5, 0.5, 1)',\n      elastic: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n      bounce: 'cubic-bezier(0.87, -0.41, 0.19, 1.44)'\n    }\n    \n    return easingMap[easing as EasingFunction] || easing\n  }\n  \n  /**\n   * 播放动画\n   */\n  play() {\n    if (this.state.playing && !this.state.paused) return\n    \n    const keyframes = this.getKeyframes()\n    const options = this.getAnimationOptions()\n    \n    if (this.state.paused && this.animation) {\n      this.animation.play()\n      this.state.paused = false\n    } else {\n      this.animation = this.element.animate(keyframes, options)\n      this.state.playing = true\n      this.state.finished = false\n      \n      this.animation.onfinish = () => {\n        this.state.finished = true\n        this.state.playing = false\n      }\n    }\n  }\n  \n  /**\n   * 暂停动画\n   */\n  pause() {\n    if (this.animation && this.state.playing) {\n      this.animation.pause()\n      this.state.paused = true\n    }\n  }\n  \n  /**\n   * 停止动画\n   */\n  stop() {\n    if (this.animation) {\n      this.animation.cancel()\n      this.state.playing = false\n      this.state.paused = false\n      this.state.finished = true\n    }\n  }\n  \n  /**\n   * 重置动画\n   */\n  reset() {\n    this.stop()\n    this.state.progress = 0\n    this.state.iteration = 0\n    \n    // 恢复初始样式\n    Object.assign(this.element.style, this.initialStyles)\n  }\n  \n  /**\n   * 反转动画\n   */\n  reverse() {\n    if (this.animation) {\n      this.animation.reverse()\n    }\n  }\n  \n  /**\n   * 设置播放速率\n   */\n  setPlaybackRate(rate: number) {\n    if (this.animation) {\n      this.animation.playbackRate = rate\n    }\n  }\n  \n  /**\n   * 跳转到指定时间\n   */\n  seek(time: number) {\n    if (this.animation) {\n      this.animation.currentTime = time\n    }\n  }\n  \n  /**\n   * 销毁动画\n   */\n  destroy() {\n    this.stop()\n    this.animation = null\n  }\n  \n  /**\n   * 获取状态\n   */\n  getState(): AnimationState {\n    return this.state\n  }\n}\n\n/**\n * 视差控制器\n */\nexport class ParallaxController {\n  private elements: Map<HTMLElement, ParallaxConfig>\n  private observer: IntersectionObserver | null = null\n  private rafId: number | null = null\n  private scrollY: number = 0\n  private scrollX: number = 0\n  \n  constructor() {\n    this.elements = new Map()\n    this.init()\n  }\n  \n  private init() {\n    // 监听滚动\n    this.handleScroll = this.handleScroll.bind(this)\n    window.addEventListener('scroll', this.handleScroll, { passive: true })\n    \n    // 创建交叉观察器\n    this.observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.startParallax(entry.target as HTMLElement)\n        } else {\n          this.stopParallax(entry.target as HTMLElement)\n        }\n      })\n    })\n  }\n  \n  /**\n   * 添加视差元素\n   */\n  add(element: HTMLElement, config: ParallaxConfig = {}) {\n    this.elements.set(element, {\n      speed: 0.5,\n      offset: 0,\n      horizontal: false,\n      vertical: true,\n      rotate: false,\n      scale: false,\n      maxOffset: 1000,\n      smooth: true,\n      ...config\n    })\n    \n    this.observer?.observe(element)\n  }\n  \n  /**\n   * 移除视差元素\n   */\n  remove(element: HTMLElement) {\n    this.elements.delete(element)\n    this.observer?.unobserve(element)\n  }\n  \n  /**\n   * 处理滚动\n   */\n  private handleScroll() {\n    this.scrollY = window.scrollY\n    this.scrollX = window.scrollX\n    \n    if (!this.rafId) {\n      this.rafId = requestAnimationFrame(() => {\n        this.updateParallax()\n        this.rafId = null\n      })\n    }\n  }\n  \n  /**\n   * 开始视差效果\n   */\n  private startParallax(element: HTMLElement) {\n    element.setAttribute('data-parallax-active', 'true')\n  }\n  \n  /**\n   * 停止视差效果\n   */\n  private stopParallax(element: HTMLElement) {\n    element.removeAttribute('data-parallax-active')\n  }\n  \n  /**\n   * 更新视差效果\n   */\n  private updateParallax() {\n    this.elements.forEach((config, element) => {\n      if (element.getAttribute('data-parallax-active') !== 'true') return\n      \n      const rect = element.getBoundingClientRect()\n      const centerY = rect.top + rect.height / 2\n      const centerX = rect.left + rect.width / 2\n      const screenCenterY = window.innerHeight / 2\n      const screenCenterX = window.innerWidth / 2\n      \n      const offsetY = (centerY - screenCenterY) * (config.speed || 0.5)\n      const offsetX = (centerX - screenCenterX) * (config.speed || 0.5)\n      \n      let transform = ''\n      \n      if (config.vertical) {\n        transform += `translateY(${Math.min(Math.max(-config.maxOffset!, offsetY), config.maxOffset!)}px) `\n      }\n      \n      if (config.horizontal) {\n        transform += `translateX(${Math.min(Math.max(-config.maxOffset!, offsetX), config.maxOffset!)}px) `\n      }\n      \n      if (config.rotate) {\n        const rotation = offsetY * 0.1\n        transform += `rotate(${rotation}deg) `\n      }\n      \n      if (config.scale) {\n        const scale = 1 + (offsetY / 1000)\n        transform += `scale(${Math.min(Math.max(0.5, scale), 1.5)}) `\n      }\n      \n      if (config.smooth) {\n        element.style.transition = 'transform 0.1s ease-out'\n      }\n      \n      element.style.transform = transform\n    })\n  }\n  \n  /**\n   * 销毁\n   */\n  destroy() {\n    window.removeEventListener('scroll', this.handleScroll)\n    this.observer?.disconnect()\n    this.elements.clear()\n    \n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n    }\n  }\n}\n\n/**\n * 手势控制器\n */\nexport class GestureController {\n  private element: HTMLElement\n  private config: GestureConfig\n  private isDragging: boolean = false\n  private startX: number = 0\n  private startY: number = 0\n  private currentX: number = 0\n  private currentY: number = 0\n  private velocityX: number = 0\n  private velocityY: number = 0\n  private rafId: number | null = null\n  \n  constructor(element: HTMLElement, config: GestureConfig = {}) {\n    this.element = element\n    this.config = {\n      drag: true,\n      rotate: false,\n      scale: false,\n      swipe: false,\n      dragElastic: 0.2,\n      dragMomentum: true,\n      swipeThreshold: 50,\n      swipeVelocity: 0.5,\n      ...config\n    }\n    \n    this.init()\n  }\n  \n  private init() {\n    if (this.config.drag) {\n      this.initDrag()\n    }\n    \n    if (this.config.swipe) {\n      this.initSwipe()\n    }\n    \n    if (this.config.scale || this.config.rotate) {\n      this.initTouch()\n    }\n  }\n  \n  /**\n   * 初始化拖拽\n   */\n  private initDrag() {\n    this.element.style.cursor = 'grab'\n    \n    const onMouseDown = (e: MouseEvent) => {\n      this.isDragging = true\n      this.element.style.cursor = 'grabbing'\n      this.startX = e.clientX - this.currentX\n      this.startY = e.clientY - this.currentY\n      \n      e.preventDefault()\n    }\n    \n    const onMouseMove = (e: MouseEvent) => {\n      if (!this.isDragging) return\n      \n      const newX = e.clientX - this.startX\n      const newY = e.clientY - this.startY\n      \n      // 应用约束\n      if (this.config.dragConstraints) {\n        const { top, bottom, left, right } = this.config.dragConstraints\n        this.currentX = Math.min(Math.max(left || -Infinity, newX), right || Infinity)\n        this.currentY = Math.min(Math.max(top || -Infinity, newY), bottom || Infinity)\n      } else {\n        this.currentX = newX\n        this.currentY = newY\n      }\n      \n      // 计算速度\n      this.velocityX = this.currentX - (this.velocityX || this.currentX)\n      this.velocityY = this.currentY - (this.velocityY || this.currentY)\n      \n      this.updateTransform()\n    }\n    \n    const onMouseUp = () => {\n      this.isDragging = false\n      this.element.style.cursor = 'grab'\n      \n      if (this.config.dragMomentum) {\n        this.applyMomentum()\n      }\n    }\n    \n    this.element.addEventListener('mousedown', onMouseDown)\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n  }\n  \n  /**\n   * 初始化滑动\n   */\n  private initSwipe() {\n    let touchStartX = 0\n    let touchStartY = 0\n    let touchStartTime = 0\n    \n    const onTouchStart = (e: TouchEvent) => {\n      const touch = e.touches[0]\n      touchStartX = touch.clientX\n      touchStartY = touch.clientY\n      touchStartTime = Date.now()\n    }\n    \n    const onTouchEnd = (e: TouchEvent) => {\n      const touch = e.changedTouches[0]\n      const deltaX = touch.clientX - touchStartX\n      const deltaY = touch.clientY - touchStartY\n      const deltaTime = Date.now() - touchStartTime\n      \n      const velocityX = deltaX / deltaTime\n      const velocityY = deltaY / deltaTime\n      \n      if (Math.abs(deltaX) > this.config.swipeThreshold! || \n          Math.abs(velocityX) > this.config.swipeVelocity!) {\n        if (deltaX > 0) {\n          this.onSwipe('right')\n        } else {\n          this.onSwipe('left')\n        }\n      }\n      \n      if (Math.abs(deltaY) > this.config.swipeThreshold! || \n          Math.abs(velocityY) > this.config.swipeVelocity!) {\n        if (deltaY > 0) {\n          this.onSwipe('down')\n        } else {\n          this.onSwipe('up')\n        }\n      }\n    }\n    \n    this.element.addEventListener('touchstart', onTouchStart, { passive: true })\n    this.element.addEventListener('touchend', onTouchEnd, { passive: true })\n  }\n  \n  /**\n   * 初始化触摸手势\n   */\n  private initTouch() {\n    let initialDistance = 0\n    let initialAngle = 0\n    let currentScale = 1\n    let currentRotation = 0\n    \n    const onTouchStart = (e: TouchEvent) => {\n      if (e.touches.length === 2) {\n        const touch1 = e.touches[0]\n        const touch2 = e.touches[1]\n        \n        // 计算初始距离（用于缩放）\n        initialDistance = Math.hypot(\n          touch2.clientX - touch1.clientX,\n          touch2.clientY - touch1.clientY\n        )\n        \n        // 计算初始角度（用于旋转）\n        initialAngle = Math.atan2(\n          touch2.clientY - touch1.clientY,\n          touch2.clientX - touch1.clientX\n        )\n      }\n    }\n    \n    const onTouchMove = (e: TouchEvent) => {\n      if (e.touches.length === 2) {\n        const touch1 = e.touches[0]\n        const touch2 = e.touches[1]\n        \n        // 计算当前距离\n        const currentDistance = Math.hypot(\n          touch2.clientX - touch1.clientX,\n          touch2.clientY - touch1.clientY\n        )\n        \n        // 计算当前角度\n        const currentAngle = Math.atan2(\n          touch2.clientY - touch1.clientY,\n          touch2.clientX - touch1.clientX\n        )\n        \n        if (this.config.scale) {\n          currentScale = currentDistance / initialDistance\n          this.element.style.transform += ` scale(${currentScale})`\n        }\n        \n        if (this.config.rotate) {\n          currentRotation = (currentAngle - initialAngle) * (180 / Math.PI)\n          this.element.style.transform += ` rotate(${currentRotation}deg)`\n        }\n      }\n    }\n    \n    this.element.addEventListener('touchstart', onTouchStart, { passive: true })\n    this.element.addEventListener('touchmove', onTouchMove, { passive: true })\n  }\n  \n  /**\n   * 更新变换\n   */\n  private updateTransform() {\n    const elastic = this.config.dragElastic || 0\n    const x = this.currentX * (1 - elastic)\n    const y = this.currentY * (1 - elastic)\n    \n    this.element.style.transform = `translate(${x}px, ${y}px)`\n  }\n  \n  /**\n   * 应用动量\n   */\n  private applyMomentum() {\n    const friction = 0.95\n    \n    const animate = () => {\n      this.velocityX *= friction\n      this.velocityY *= friction\n      \n      this.currentX += this.velocityX\n      this.currentY += this.velocityY\n      \n      this.updateTransform()\n      \n      if (Math.abs(this.velocityX) > 0.1 || Math.abs(this.velocityY) > 0.1) {\n        this.rafId = requestAnimationFrame(animate)\n      }\n    }\n    \n    animate()\n  }\n  \n  /**\n   * 滑动回调\n   */\n  private onSwipe(direction: 'up' | 'down' | 'left' | 'right') {\n    // 可以通过事件或回调函数通知外部\n    this.element.dispatchEvent(new CustomEvent('swipe', { \n      detail: { direction } \n    }))\n  }\n  \n  /**\n   * 销毁\n   */\n  destroy() {\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId)\n    }\n    // 移除事件监听器\n  }\n}\n\n// 导出单例\nexport const animationController = new AnimationController()\nexport const parallaxController = new ParallaxController()"],"names":["AnimationController","constructor","rafId","startTime","disposed","animations","Map","create","id","element","config","animation","Animation","set","play","get","pause","stop","reset","destroy","delete","destroyAll","forEach","clear","cancelAnimationFrame","initialStyles","state","reactive","playing","paused","progress","iteration","finished","saveInitialStyles","autoPlay","computedStyles","window","getComputedStyle","transform","opacity","filter","getKeyframes","type","direction","properties","distance","translateMap","up","down","left","right","degrees","axis","keyframes","getAnimationOptions","duration","delay","easing","iterations","fillMode","getEasing","Infinity","fill","easingMap","linear","ease","spring","elastic","bounce","options","animate","onfinish","cancel","Object","assign","style","reverse","setPlaybackRate","rate","playbackRate","seek","time","currentTime","getState","ParallaxController","observer","scrollY","scrollX","elements","init","handleScroll","bind","addEventListener","passive","IntersectionObserver","entries","entry","isIntersecting","startParallax","target","stopParallax","add","speed","offset","horizontal","vertical","rotate","scale","maxOffset","smooth","observe","remove","unobserve","requestAnimationFrame","updateParallax","setAttribute","removeAttribute","getAttribute","rect","getBoundingClientRect","centerY","top","height","centerX","width","screenCenterY","innerHeight","screenCenterX","innerWidth","offsetY","offsetX","Math","min","max","rotation","transition","removeEventListener","disconnect","GestureController","isDragging","startX","startY","currentX","currentY","velocityX","velocityY","drag","swipe","dragElastic","dragMomentum","swipeThreshold","swipeVelocity","initDrag","initSwipe","initTouch","cursor","onMouseDown","e","clientX","clientY","preventDefault","onMouseMove","newX","newY","dragConstraints","bottom","updateTransform","onMouseUp","applyMomentum","document","touchStartX","touchStartY","touchStartTime","onTouchStart","touch","touches","Date","now","onTouchEnd","changedTouches","deltaX","deltaY","deltaTime","abs","onSwipe","initialDistance","initialAngle","currentScale","currentRotation","length","touch1","touch2","hypot","atan2","onTouchMove","currentDistance","currentAngle","PI","x","y","friction","dispatchEvent","CustomEvent","detail","animationController","parallaxController"],"mappings":"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"}