{"version":3,"file":"InheritableTemplate.vue2.js","sources":["../../src/components/InheritableTemplate.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport type { MergeStrategy, TemplateBlock } from '../core/inheritance'\r\nimport type { Template } from '../types'\r\nimport { computed, onBeforeUnmount, watch } from 'vue'\r\nimport { useTemplateInheritance } from '../composables/useTemplateInheritance'\r\n\r\n/**\r\n * 组件属性\r\n */\r\ninterface Props {\r\n  /**\r\n   * 模板\r\n   */\r\n  template: Template\r\n  \r\n  /**\r\n   * 父模板\r\n   */\r\n  extends?: Template | string\r\n  \r\n  /**\r\n   * 混入列表\r\n   */\r\n  mixins?: (Template | string)[]\r\n  \r\n  /**\r\n   * 合并策略\r\n   */\r\n  mergeStrategy?: MergeStrategy\r\n  \r\n  /**\r\n   * 模板块定义\r\n   */\r\n  blocks?: TemplateBlock[]\r\n  \r\n  /**\r\n   * 块覆盖\r\n   */\r\n  blockOverrides?: Record<string, any>\r\n  \r\n  /**\r\n   * 组件属性\r\n   */\r\n  componentProps?: Record<string, any>\r\n  \r\n  /**\r\n   * 内容属性\r\n   */\r\n  contentProps?: Record<string, any>\r\n  \r\n  /**\r\n   * 是否显示调试信息\r\n   */\r\n  showDebug?: boolean\r\n  \r\n  /**\r\n   * 是否自动注册\r\n   */\r\n  autoRegister?: boolean\r\n  \r\n  /**\r\n   * CSS类名\r\n   */\r\n  className?: string\r\n  \r\n  /**\r\n   * 最大继承深度\r\n   */\r\n  maxDepth?: number\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  mixins: () => [],\r\n  mergeStrategy: () => ({}),\r\n  blocks: () => [],\r\n  blockOverrides: () => ({}),\r\n  componentProps: () => ({}),\r\n  contentProps: () => ({}),\r\n  showDebug: false,\r\n  autoRegister: true,\r\n  maxDepth: 10\r\n})\r\n\r\n/**\r\n * 事件\r\n */\r\nconst emit = defineEmits<{\r\n  /**\r\n   * 继承完成\r\n   */\r\n  'inherited': [template: Template]\r\n  \r\n  /**\r\n   * 块覆盖\r\n   */\r\n  'blockOverride': [name: string, success: boolean]\r\n  \r\n  /**\r\n   * 深度超限\r\n   */\r\n  'depthExceeded': [depth: number]\r\n}>()\r\n\r\n// 使用模板继承\r\nconst {\r\n  template: processedTemplate,\r\n  isInherited,\r\n  inheritanceChain,\r\n  blocks,\r\n  // context, // Removing unused variable\r\n  defineBlock,\r\n  overrideBlock,\r\n  getBlock,\r\n  renderBlock,\r\n  getDepth,\r\n  cleanup\r\n} = useTemplateInheritance(props.template, {\r\n  extends: props.extends,\r\n  mixins: props.mixins,\r\n  mergeStrategy: props.mergeStrategy,\r\n  allowOverride: true,\r\n  maxDepth: props.maxDepth,\r\n  autoRegister: props.autoRegister,\r\n  enableBlocks: true,\r\n  blockOverrides: props.blockOverrides,\r\n  trackChain: props.showDebug\r\n})\r\n\r\n// 注册块\r\nif (props.blocks.length > 0) {\r\n  props.blocks.forEach(block => {\r\n    defineBlock(block)\r\n  })\r\n}\r\n\r\n// 计算属性\r\nconst cssClasses = computed(() => {\r\n  const classes = []\r\n  \r\n  if (props.className) {\r\n    classes.push(props.className)\r\n  }\r\n  \r\n  if (isInherited.value) {\r\n    classes.push('is-inherited')\r\n  }\r\n  \r\n  if (props.extends) {\r\n    classes.push('has-parent')\r\n  }\r\n  \r\n  if (props.mixins.length > 0) {\r\n    classes.push('has-mixins')\r\n  }\r\n  \r\n  return classes\r\n})\r\n\r\n// 继承的内容\r\nconst inheritedContent = computed(() => {\r\n  if (!isInherited.value) {\r\n    return null\r\n  }\r\n  \r\n  return processedTemplate.value.component\r\n})\r\n\r\n// 深度\r\nconst depth = computed(() => getDepth())\r\n\r\n// 检查是否有块\r\nconst hasBlock = (name: string): boolean => {\r\n  return blocks.has(name)\r\n}\r\n\r\n// 监听继承变化\r\nwatch(\r\n  () => processedTemplate.value,\r\n  (newTemplate) => {\r\n    if (isInherited.value) {\r\n      emit('inherited', newTemplate)\r\n    }\r\n  }\r\n)\r\n\r\n// 监听深度\r\nwatch(\r\n  depth,\r\n  (newDepth) => {\r\n    if (newDepth > props.maxDepth) {\r\n      emit('depthExceeded', newDepth)\r\n    }\r\n  }\r\n)\r\n\r\n// 暴露方法\r\ndefineExpose({\r\n  /**\r\n   * 覆盖块\r\n   */\r\n  overrideBlock: (name: string, content: any) => {\r\n    const success = overrideBlock(name, content)\r\n    emit('blockOverride', name, success)\r\n    return success\r\n  },\r\n  \r\n  /**\r\n   * 获取块\r\n   */\r\n  getBlock,\r\n  \r\n  /**\r\n   * 获取处理后的模板\r\n   */\r\n  getProcessedTemplate: () => processedTemplate.value,\r\n  \r\n  /**\r\n   * 获取继承链\r\n   */\r\n  getInheritanceChain: () => inheritanceChain.value,\r\n  \r\n  /**\r\n   * 获取深度\r\n   */\r\n  getDepth\r\n})\r\n\r\n// 清理\r\nonBeforeUnmount(() => {\r\n  cleanup()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"inheritable-template\" :class=\"cssClasses\">\r\n    <!-- 头部块 -->\r\n    <template v-if=\"hasBlock('header')\">\r\n      <component :is=\"renderBlock('header')\" />\r\n    </template>\r\n    \r\n    <!-- 主内容 -->\r\n    <div class=\"template-content\">\r\n      <slot name=\"before-content\" />\r\n      \r\n      <!-- 继承的内容 -->\r\n      <template v-if=\"inheritedContent\">\r\n        <component :is=\"inheritedContent\" v-bind=\"contentProps\" />\r\n      </template>\r\n      \r\n      <!-- 默认内容 -->\r\n      <slot v-else>\r\n        <component \r\n          :is=\"template.component\"\r\n          v-if=\"template.component\"\r\n          v-bind=\"componentProps\"\r\n        />\r\n      </slot>\r\n      \r\n      <slot name=\"after-content\" />\r\n    </div>\r\n    \r\n    <!-- 底部块 -->\r\n    <template v-if=\"hasBlock('footer')\">\r\n      <component :is=\"renderBlock('footer')\" />\r\n    </template>\r\n    \r\n    <!-- 调试信息 -->\r\n    <div v-if=\"showDebug\" class=\"inheritance-debug\">\r\n      <div class=\"debug-info\">\r\n        <h4>Inheritance Chain</h4>\r\n        <ul>\r\n          <li v-for=\"(item, index) in inheritanceChain\" :key=\"index\">\r\n            {{ item }}\r\n          </li>\r\n        </ul>\r\n        <p>Depth: {{ depth }}</p>\r\n        <p>Is Inherited: {{ isInherited }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.inheritable-template {\r\n  position: relative;\r\n}\r\n\r\n.template-content {\r\n  min-height: 100px;\r\n}\r\n\r\n/* 继承状态 */\r\n.inheritable-template.is-inherited {\r\n  border: 1px dashed var(--color-primary-light);\r\n}\r\n\r\n.inheritable-template.has-parent::before {\r\n  content: 'extends';\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 10px;\r\n  font-size: 10px;\r\n  color: var(--color-text-secondary);\r\n  background: white;\r\n  padding: 0 4px;\r\n}\r\n\r\n.inheritable-template.has-mixins::after {\r\n  content: 'mixins';\r\n  position: absolute;\r\n  top: -10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n  color: var(--color-text-secondary);\r\n  background: white;\r\n  padding: 0 4px;\r\n}\r\n\r\n/* 调试信息 */\r\n.inheritance-debug {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.debug-info h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.debug-info ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n}\r\n\r\n.debug-info li {\r\n  font-size: 12px;\r\n  color: #888;\r\n  line-height: 1.5;\r\n}\r\n\r\n.debug-info p {\r\n  margin: 5px 0;\r\n  font-size: 12px;\r\n  color: #888;\r\n}\r\n</style>"],"names":["props","__props","emit","__emit","template","processedTemplate","isInherited","inheritanceChain","blocks","defineBlock","overrideBlock","getBlock","renderBlock","getDepth","cleanup","useTemplateInheritance","extends","mixins","mergeStrategy","allowOverride","maxDepth","autoRegister","enableBlocks","blockOverrides","trackChain","showDebug","length","forEach","block","cssClasses","computed","classes","className","push","value","inheritedContent","component","depth","hasBlock","name","has","watch","newTemplate","newDepth","__expose","content","success","getProcessedTemplate","getInheritanceChain","onBeforeUnmount","_createElementBlock","class","_normalizeClass","_createCommentVNode","_openBlock","_createBlock","_resolveDynamicComponent","_unref","key","_createElementVNode","_hoisted_1","_renderSlot","_ctx","$slots","_normalizeProps","_mergeProps","contentProps","_Fragment","componentProps","_hoisted_2","_hoisted_3","_cache","_renderList","item","index","_toDisplayString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,IAAA,MAAMA,KAAAA,GAAQC,OAAAA;AAed,IAAA,MAAMC,IAAAA,GAAOC,MAAAA;AAkBb,IAAA,MAAM;AAAA,MACJC,QAAAA,EAAUC,iBAAAA;AAAAA,MACVC,WAAAA;AAAAA,MACAC,gBAAAA;AAAAA,MACAC,MAAAA;AAAAA;AAAAA,MAEAC,WAAAA;AAAAA,MACAC,aAAAA;AAAAA,MACAC,QAAAA;AAAAA,MACAC,WAAAA;AAAAA,MACAC,QAAAA;AAAAA,MACAC;AAAAA,KACF,GAAIC,sBAAAA,CAAuBf,KAAAA,CAAMI,QAAAA,EAAU;AAAA,MACzCY,SAAShB,KAAAA,CAAMgB,OAAAA;AAAAA,MACfC,QAAQjB,KAAAA,CAAMiB,MAAAA;AAAAA,MACdC,eAAelB,KAAAA,CAAMkB,aAAAA;AAAAA,MACrBC,aAAAA,EAAe,IAAA;AAAA,MACfC,UAAUpB,KAAAA,CAAMoB,QAAAA;AAAAA,MAChBC,cAAcrB,KAAAA,CAAMqB,YAAAA;AAAAA,MACpBC,YAAAA,EAAc,IAAA;AAAA,MACdC,gBAAgBvB,KAAAA,CAAMuB,cAAAA;AAAAA,MACtBC,YAAYxB,KAAAA,CAAMyB;AAAAA,KACnB,CAAA;AAGD,IAAA,IAAIzB,KAAAA,CAAMQ,MAAAA,CAAOkB,MAAAA,GAAS,CAAA,EAAG;AAC3B1B,MAAAA,KAAAA,CAAMQ,MAAAA,CAAOmB,QAAQC,CAAAA,KAAAA,KAAS;AAC5BnB,QAAAA,WAAAA,CAAYmB,KAAK,CAAA;AAAA,MACnB,CAAC,CAAA;AAAA,IACH;AAGA,IAAA,MAAMC,UAAAA,GAAaC,SAAS,MAAM;AAChC,MAAA,MAAMC,UAAU,EAAA;AAEhB,MAAA,IAAI/B,MAAMgC,SAAAA,EAAW;AACnBD,QAAAA,OAAAA,CAAQE,IAAAA,CAAKjC,MAAMgC,SAAS,CAAA;AAAA,MAC9B;AAEA,MAAA,IAAI1B,YAAY4B,KAAAA,EAAO;AACrBH,QAAAA,OAAAA,CAAQE,KAAK,cAAc,CAAA;AAAA,MAC7B;AAEA,MAAA,IAAIjC,MAAMgB,OAAAA,EAAS;AACjBe,QAAAA,OAAAA,CAAQE,KAAK,YAAY,CAAA;AAAA,MAC3B;AAEA,MAAA,IAAIjC,KAAAA,CAAMiB,MAAAA,CAAOS,MAAAA,GAAS,CAAA,EAAG;AAC3BK,QAAAA,OAAAA,CAAQE,KAAK,YAAY,CAAA;AAAA,MAC3B;AAEA,MAAA,OAAOF,OAAAA;AAAAA,IACT,CAAC,CAAA;AAGD,IAAA,MAAMI,gBAAAA,GAAmBL,SAAS,MAAM;AACtC,MAAA,IAAI,CAACxB,YAAY4B,KAAAA,EAAO;AACtB,QAAA,OAAO,IAAA;AAAA,MACT;AAEA,MAAA,OAAO7B,kBAAkB6B,KAAAA,CAAME,SAAAA;AAAAA,IACjC,CAAC,CAAA;AAGD,IAAA,MAAMC,KAAAA,GAAQP,QAAAA,CAAS,MAAMjB,QAAAA,EAAU,CAAA;AAGvC,IAAA,MAAMyB,QAAAA,GAAWA,CAACC,IAAAA,KAA0B;AAC1C,MAAA,OAAO/B,MAAAA,CAAOgC,IAAID,IAAI,CAAA;AAAA,IACxB,CAAA;AAGAE,IAAAA,KAAAA,CACE,MAAMpC,iBAAAA,CAAkB6B,KAAAA,EACvBQ,CAAAA,WAAAA,KAAgB;AACf,MAAA,IAAIpC,YAAY4B,KAAAA,EAAO;AACrBhC,QAAAA,IAAAA,CAAK,aAAawC,WAAW,CAAA;AAAA,MAC/B;AAAA,IACF,CACF,CAAA;AAGAD,IAAAA,KAAAA,CACEJ,OACCM,CAAAA,QAAAA,KAAa;AACZ,MAAA,IAAIA,QAAAA,GAAW3C,MAAMoB,QAAAA,EAAU;AAC7BlB,QAAAA,IAAAA,CAAK,iBAAiByC,QAAQ,CAAA;AAAA,MAChC;AAAA,IACF,CACF,CAAA;AAGAC,IAAAA,QAAAA,CAAa;AAAA;AAAA;AAAA;AAAA,MAIXlC,aAAAA,EAAeA,CAAC6B,IAAAA,EAAcM,OAAAA,KAAiB;AAC7C,QAAA,MAAMC,OAAAA,GAAUpC,aAAAA,CAAc6B,IAAAA,EAAMM,OAAO,CAAA;AAC3C3C,QAAAA,IAAAA,CAAK,eAAA,EAAiBqC,MAAMO,OAAO,CAAA;AACnC,QAAA,OAAOA,OAAAA;AAAAA,MACT,CAAA;AAAA;AAAA;AAAA;AAAA,MAKAnC,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAKAoC,oBAAAA,EAAsBA,MAAM1C,iBAAAA,CAAkB6B,KAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAK9Cc,mBAAAA,EAAqBA,MAAMzC,gBAAAA,CAAiB2B,KAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAK5CrB;AAAAA,KACD,CAAA;AAGDoC,IAAAA,eAAAA,CAAgB,MAAM;AACpBnC,MAAAA,OAAAA,EAAQ;AAAA,IACV,CAAC,CAAA;;0BAICoC,kBAAAA;AAAAA,QA6CM,KAAA;AAAA,QAAA;AAAA,UA7CDC,OAAKC,cAAAA,CAAA,CAAC,sBAAA,EAA+BvB,UAAAA,CAAAK,KAAU,CAAA;AAAA;SAClDmB,kBAAAA,CAAA,sBAAA,CAAA,EACgBf,QAAAA,CAAQ,QAAA,CAAA,IACtBgB,SAAAA,EAAA,EAAAC,WAAAA,CAAyCC,wBAAzBC,KAAAA,CAAA7C,WAAA,CAAA,CAAW,QAAA,CAAA,CAAA,EAAA;AAAA,UAAA8C,GAAAA,EAAA;AAAA,SAAA,CAAA,sCAG7BL,kBAAAA,CAAA,sBAAA,CAAA,EACAM,kBAAAA,CAkBM,KAAA,EAlBNC,UAAAA,EAkBM,CAjBJC,UAAAA,CAA8BC,IAAAA,CAAAC,MAAAA,EAAA,gBAAA,CAAA,EAE9BV,kBAAAA,CAAA,kCAAA,CAAA,EACgBlB,gBAAAA,CAAAD,KAAAA,iBACdqB,WAAAA;AAAAA,UAA0DC,uBAAAA,CAA1CrB,iBAAAD,KAAgB,CAAA;AAAA,UAAA8B,eAAAC,UAAAA,CAAA;AAAA,YAAAP,GAAAA,EAAA;AAAA,WAAA,EAAUQ,IAAAA,CAAAA,YAAY,CAAA,CAAA;AAAA,UAAA,IAAA;AAAA,UAAA;AAAA;AAAA,SAAA,kBAIxDhB,kBAAAA;AAAAA,UAMOiB,QAAAA;AAAAA,UAAA;AAAA,YAAAT,GAAAA,EAAA;AAAA,WAAA;AAAA,UAAA,CAPPL,kBAAAA,CAAA,4BAAA,CAAA,EACAQ,UAAAA,CAMOC,4BANP,MAMO,CAHG1D,IAAAA,CAAAA,QAAAA,CAASgC,SAAAA,IAFjBkB,WAAA,EAAAC,WAAAA;AAAAA,YAIEC,uBAAAA,CAHKpD,IAAAA,CAAAA,QAAAA,CAASgC,SAAS,CAAA;AAAA;;eAEfgC,IAAAA,CAAAA,cAAc,CAAA,CAAA;AAAA,YAAA,IAAA;AAAA,YAAA;AAAA;AAAA;;;YAI1BP,WAA6BC,IAAAA,CAAAC,MAAAA,EAAA,eAAA,CAAA,IAG/BV,kBAAAA,CAAA,sBAAA,CAAA,EACgBf,SAAQ,QAAA,CAAA,IACtBgB,SAAAA,EAAA,EAAAC,WAAAA,CAAyCC,uBAAAA,CAAzBC,MAAA7C,WAAA,CAAA,CAAW,QAAA,CAAA,CAAA,EAAA;AAAA,UAAA8C,GAAAA,EAAA;AAAA,SAAA,CAAA,sCAG7BL,kBAAAA,CAAA,4BAAA,CAAA,EACW5B,IAAAA,CAAAA,SAAAA,IAAX6B,SAAAA,EAAA,EAAAJ,mBAWM,KAAA,EAXNmB,UAAAA,EAWM,CAVJV,kBAAAA,CASM,KAAA,EATNW,UAAAA,EASM,CARJC,MAAAA,CAAA,CAAA,CAAA,KAAAA,MAAAA,CAAA,CAAA,CAAA,GAAAZ,kBAAAA;AAAAA,UAA0B,IAAA;AAAA;UAAtB,mBAAA;AAAA,UAAiB;AAAA;AAAA,YACrBA,kBAAAA,CAIK,IAAA,EAAA,MAAA,EAHHL,SAAAA,CAAA,IAAA,CAAA,EAAAJ,kBAAAA;AAAAA,UAEKiB,QAAAA;AAAAA,UAAA,IAAA;AAAA,UAAAK,WAFuBf,KAAAA,CAAAlD,gBAAA,CAAA,EAAgB,CAAhCkE,MAAMC,KAAAA,KAAK;AAAvB,YAAA,OAAApB,WAAA,EAAAJ,kBAAAA;AAAAA,cAEK,IAAA;AAAA,cAAA;AAAA,gBAF0CQ,GAAAA,EAAKgB;AAAAA;8BAC/CD,IAAI,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA;AAAA;;;cAGXd,kBAAAA;AAAAA,UAAyB,GAAA;AAAA,UAAA,IAAA;AAAA,UAAtB,SAAA,GAAOgB,eAAAA,CAAGtC,KAAAA,CAAAH,KAAK,CAAA;AAAA,UAAA;AAAA;AAAA,SAAA,EAClByB,kBAAAA;AAAAA,UAAsC,GAAA;AAAA,UAAA,IAAA;AAAA,UAAnC,gBAAA,GAAcgB,eAAAA,CAAGlB,KAAAA,CAAAnD,WAAA,CAAW,CAAA;AAAA,UAAA;AAAA;AAAA,SAAA;;;;;;;;;;;;;"}