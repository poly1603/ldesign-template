{"version":3,"file":"useTemplatePlugin.js","sources":["../../src/plugin/useTemplatePlugin.ts"],"sourcesContent":["/**\n * @ldesign/template - Use Template Plugin\n * \n * Composable for using template plugin in Vue components\n */\n\nimport { inject } from 'vue'\nimport { type TemplatePlugin, TemplatePluginSymbol } from './createPlugin'\n\n/**\n * Use template plugin\n * \n * @example\n * ```vue\n * <script setup>\n * import { useTemplatePlugin } from '@ldesign/template/plugin'\n * \n * const template = useTemplatePlugin()\n * \n * // Load template\n * const component = await template.loadTemplate('login', 'desktop', 'default')\n * \n * // Get default template\n * const defaultTemplate = await template.getDefaultTemplate('login', 'desktop')\n * \n * // Detect device\n * const device = template.detectDevice()\n * </script>\n * ```\n */\nexport function useTemplatePlugin(): TemplatePlugin | null {\n  const plugin = inject<TemplatePlugin>(TemplatePluginSymbol, null)\n  \n  // 返回 null 而不是抛出错误，让组件可以降级处理\n  if (!plugin && import.meta.env.DEV) {\n    console.warn(\n      '[Template Plugin] useTemplatePlugin() called without plugin installed.\\n' +\n      'Make sure you have called app.use(templatePlugin) before using this composable.'\n    )\n  }\n\n  return plugin\n}\n\n/**\n * Default export\n */\nexport default useTemplatePlugin"],"names":["useTemplatePlugin","plugin","inject","TemplatePluginSymbol","import","env","DEV","console","warn"],"mappings":";;;;;;;;;;;;SA8BgBA,iBAAAA,GAAiB;AAC/B,EAAA,MAAMC,MAAAA,GAASC,MAAAA,CAAuBC,oBAAAA,EAAsB,IAAI,CAAA;AAGhE,EAAA,IAAI,CAACF,MAAAA,IAAUG,MAAAA,CAAAA,IAAAA,CAAYC,GAAAA,CAAIC,GAAAA,EAAK;AAClCC,IAAAA,OAAAA,CAAQC,KACN,yJACiF,CAAA;AAAA,EAErF;AAEA,EAAA,OAAOP,MAAAA;AACT;;;;;;;"}