{"version":3,"file":"useTemplateAnimation.js","sources":["../../src/composables/useTemplateAnimation.ts"],"sourcesContent":["import { computed, onBeforeUnmount, onMounted, ref, type Ref, watch } from 'vue'\r\n\r\n/**\r\n * 动画缓动函数类型\r\n */\r\nexport type EasingFunction = (t: number) => number\r\n\r\n/**\r\n * 预设缓动函数\r\n */\r\nexport const EASING_FUNCTIONS: Record<string, EasingFunction> = {\r\n  linear: (t: number) => t,\r\n  easeInQuad: (t: number) => t * t,\r\n  easeOutQuad: (t: number) => t * (2 - t),\r\n  easeInOutQuad: (t: number) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\r\n  easeInCubic: (t: number) => t * t * t,\r\n  easeOutCubic: (t: number) => --t * t * t + 1,\r\n  easeInOutCubic: (t: number) => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1),\r\n  easeInQuart: (t: number) => t * t * t * t,\r\n  easeOutQuart: (t: number) => 1 - --t * t * t * t,\r\n  easeInOutQuart: (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t),\r\n  easeInElastic: (t: number) => {\r\n    const c4 = (2 * Math.PI) / 3\r\n    return t === 0 ? 0 : t === 1 ? 1 : -(2**(10 * t - 10)) * Math.sin((t * 10 - 10.75) * c4)\r\n  },\r\n  easeOutElastic: (t: number) => {\r\n    const c4 = (2 * Math.PI) / 3\r\n    return t === 0 ? 0 : t === 1 ? 1 : 2**(-10 * t) * Math.sin((t * 10 - 0.75) * c4) + 1\r\n  },\r\n  easeInBack: (t: number) => {\r\n    const c1 = 1.70158\r\n    const c3 = c1 + 1\r\n    return c3 * t * t * t - c1 * t * t\r\n  },\r\n  easeOutBack: (t: number) => {\r\n    const c1 = 1.70158\r\n    const c3 = c1 + 1\r\n    return 1 + c3 * (t - 1)**3 + c1 * (t - 1)**2\r\n  },\r\n  easeInBounce: (t: number) => 1 - EASING_FUNCTIONS.easeOutBounce(1 - t),\r\n  easeOutBounce: (t: number) => {\r\n    const n1 = 7.5625\r\n    const d1 = 2.75\r\n    if (t < 1 / d1) return n1 * t * t\r\n    if (t < 2 / d1) return n1 * (t -= 1.5 / d1) * t + 0.75\r\n    if (t < 2.5 / d1) return n1 * (t -= 2.25 / d1) * t + 0.9375\r\n    return n1 * (t -= 2.625 / d1) * t + 0.984375\r\n  },\r\n}\r\n\r\n/**\r\n * 动画配置\r\n */\r\nexport interface AnimationConfig {\r\n  duration?: number // 动画持续时间（毫秒）\r\n  delay?: number // 延迟时间（毫秒）\r\n  easing?: string | EasingFunction // 缓动函数\r\n  loop?: boolean | number // 是否循环或循环次数\r\n  yoyo?: boolean // 是否往返播放\r\n  onStart?: () => void\r\n  onUpdate?: (progress: number) => void\r\n  onComplete?: () => void\r\n}\r\n\r\n/**\r\n * 视差滚动配置\r\n */\r\nexport interface ParallaxConfig {\r\n  speed?: number // 滚动速度倍率 (0-1 慢速, >1 快速)\r\n  direction?: 'vertical' | 'horizontal' | 'both'\r\n  reverse?: boolean // 反向滚动\r\n  offset?: number // 偏移量\r\n  threshold?: [number, number] // 可见区域阈值 [start, end]\r\n}\r\n\r\n/**\r\n * 手势动画配置\r\n */\r\nexport interface GestureConfig {\r\n  type?: 'drag' | 'swipe' | 'pinch' | 'rotate'\r\n  threshold?: number // 手势触发阈值\r\n  onGestureStart?: (event: TouchEvent | MouseEvent) => void\r\n  onGestureMove?: (delta: { x: number; y: number }, event: TouchEvent | MouseEvent) => void\r\n  onGestureEnd?: (velocity: { x: number; y: number }, event: TouchEvent | MouseEvent) => void\r\n}\r\n\r\n/**\r\n * 序列动画步骤\r\n */\r\nexport interface SequenceStep {\r\n  target: string | HTMLElement // CSS选择器或元素\r\n  properties: Record<string, any> // 动画属性\r\n  config?: AnimationConfig\r\n}\r\n\r\n/**\r\n * 使用模板动画\r\n */\r\nexport function useTemplateAnimation(options: AnimationConfig = {}) {\r\n  const isPlaying = ref(false)\r\n  const isPaused = ref(false)\r\n  const progress = ref(0)\r\n  const currentLoop = ref(0)\r\n\r\n  let animationId: number | null = null\r\n  let startTime: number | null = null\r\n  let pauseTime: number | null = null\r\n\r\n  const {\r\n    duration = 1000,\r\n    delay = 0,\r\n    easing = 'easeInOutQuad',\r\n    loop = false,\r\n    yoyo = false,\r\n    onStart,\r\n    onUpdate,\r\n    onComplete,\r\n  } = options\r\n\r\n  const easingFn = typeof easing === 'string' ? EASING_FUNCTIONS[easing] || EASING_FUNCTIONS.linear : easing\r\n\r\n  const animate = (timestamp: number) => {\r\n    if (!startTime) startTime = timestamp + delay\r\n    if (timestamp < startTime) {\r\n      animationId = requestAnimationFrame(animate)\r\n      return\r\n    }\r\n\r\n    const elapsed = pauseTime || timestamp - startTime\r\n    const rawProgress = Math.min(elapsed / duration, 1)\r\n    let adjustedProgress = easingFn(rawProgress)\r\n\r\n    if (yoyo && currentLoop.value % 2 === 1) {\r\n      adjustedProgress = 1 - adjustedProgress\r\n    }\r\n\r\n    progress.value = adjustedProgress\r\n    onUpdate?.(adjustedProgress)\r\n\r\n    if (rawProgress < 1) {\r\n      animationId = requestAnimationFrame(animate)\r\n    } else {\r\n      if (loop) {\r\n        const maxLoops = typeof loop === 'number' ? loop : Infinity\r\n        currentLoop.value++\r\n        if (currentLoop.value < maxLoops) {\r\n          startTime = timestamp\r\n          animationId = requestAnimationFrame(animate)\r\n        } else {\r\n          isPlaying.value = false\r\n          onComplete?.()\r\n        }\r\n      } else {\r\n        isPlaying.value = false\r\n        onComplete?.()\r\n      }\r\n    }\r\n  }\r\n\r\n  const play = () => {\r\n    if (isPlaying.value) return\r\n\r\n    isPlaying.value = true\r\n    isPaused.value = false\r\n    startTime = null\r\n    pauseTime = null\r\n    currentLoop.value = 0\r\n    onStart?.()\r\n    animationId = requestAnimationFrame(animate)\r\n  }\r\n\r\n  const pause = () => {\r\n    if (!isPlaying.value || isPaused.value) return\r\n    isPaused.value = true\r\n    if (animationId) {\r\n      cancelAnimationFrame(animationId)\r\n      animationId = null\r\n    }\r\n    pauseTime = progress.value * duration\r\n  }\r\n\r\n  const resume = () => {\r\n    if (!isPaused.value) return\r\n    isPaused.value = false\r\n    isPlaying.value = true\r\n    animationId = requestAnimationFrame(animate)\r\n  }\r\n\r\n  const stop = () => {\r\n    isPlaying.value = false\r\n    isPaused.value = false\r\n    progress.value = 0\r\n    currentLoop.value = 0\r\n    startTime = null\r\n    pauseTime = null\r\n    if (animationId) {\r\n      cancelAnimationFrame(animationId)\r\n      animationId = null\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    stop()\r\n    progress.value = 0\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    stop()\r\n  })\r\n\r\n  return {\r\n    isPlaying,\r\n    isPaused,\r\n    progress,\r\n    currentLoop,\r\n    play,\r\n    pause,\r\n    resume,\r\n    stop,\r\n    reset,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用视差滚动效果\r\n */\r\nexport function useParallax(elementRef: Ref<HTMLElement | null>, config: ParallaxConfig = {}) {\r\n  const {\r\n    speed = 0.5,\r\n    direction = 'vertical',\r\n    reverse = false,\r\n    offset = 0,\r\n    threshold = [0, 1],\r\n  } = config\r\n\r\n  const scrollY = ref(0)\r\n  const scrollX = ref(0)\r\n  const transform = computed(() => {\r\n    const element = elementRef.value\r\n    if (!element) return ''\r\n\r\n    const rect = element.getBoundingClientRect()\r\n    const viewportHeight = window.innerHeight\r\n    // const viewportWidth = window.innerWidth // Not used currently\r\n\r\n    // 计算元素在视口中的位置 (0-1)\r\n    const elementProgress = 1 - (rect.top + rect.height / 2) / viewportHeight\r\n    \r\n    // 应用阈值\r\n    if (elementProgress < threshold[0] || elementProgress > threshold[1]) {\r\n      return ''\r\n    }\r\n\r\n    const multiplier = reverse ? -1 : 1\r\n    const movement = (elementProgress - 0.5) * 100 * speed * multiplier\r\n\r\n    if (direction === 'vertical') {\r\n      return `translateY(${movement + offset}px)`\r\n    } else if (direction === 'horizontal') {\r\n      return `translateX(${movement + offset}px)`\r\n    } else {\r\n      return `translate(${movement + offset}px, ${movement + offset}px)`\r\n    }\r\n  })\r\n\r\n  const handleScroll = () => {\r\n    scrollY.value = window.scrollY\r\n    scrollX.value = window.scrollX\r\n  }\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('scroll', handleScroll, { passive: true })\r\n    handleScroll()\r\n  })\r\n\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener('scroll', handleScroll)\r\n  })\r\n\r\n  watch(transform, (newTransform) => {\r\n    if (elementRef.value && newTransform) {\r\n      elementRef.value.style.transform = newTransform\r\n    }\r\n  })\r\n\r\n  return {\r\n    scrollY,\r\n    scrollX,\r\n    transform,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用手势动画\r\n */\r\nexport function useGesture(elementRef: Ref<HTMLElement | null>, config: GestureConfig = {}) {\r\n  const {\r\n    // type = 'drag', // Not used currently\r\n    threshold = 10,\r\n    onGestureStart,\r\n    onGestureMove,\r\n    onGestureEnd,\r\n  } = config\r\n\r\n  const isGesturing = ref(false)\r\n  const startPos = ref({ x: 0, y: 0 })\r\n  const currentPos = ref({ x: 0, y: 0 })\r\n  const delta = computed(() => ({\r\n    x: currentPos.value.x - startPos.value.x,\r\n    y: currentPos.value.y - startPos.value.y,\r\n  }))\r\n\r\n  let startTime = 0\r\n  let lastPos = { x: 0, y: 0 }\r\n  let lastTime = 0\r\n  // 存储事件处理器引用，方便清理\r\n  let handlers: { element: HTMLElement | Window; event: string; handler: EventListener; options?: any }[] = []\r\n\r\n  const getEventPos = (event: TouchEvent | MouseEvent) => {\r\n    if ('touches' in event) {\r\n      return { x: event.touches[0].clientX, y: event.touches[0].clientY }\r\n    }\r\n    return { x: event.clientX, y: event.clientY }\r\n  }\r\n\r\n  const handleStart = (event: TouchEvent | MouseEvent) => {\r\n    const pos = getEventPos(event)\r\n    startPos.value = pos\r\n    currentPos.value = pos\r\n    lastPos = pos\r\n    startTime = Date.now()\r\n    lastTime = startTime\r\n    isGesturing.value = true\r\n    onGestureStart?.(event)\r\n  }\r\n\r\n  const handleMove = (event: TouchEvent | MouseEvent) => {\r\n    if (!isGesturing.value) return\r\n\r\n    const pos = getEventPos(event)\r\n    currentPos.value = pos\r\n    \r\n    const currentDelta = {\r\n      x: pos.x - startPos.value.x,\r\n      y: pos.y - startPos.value.y,\r\n    }\r\n\r\n    // 检查是否超过阈值\r\n    if (Math.abs(currentDelta.x) > threshold || Math.abs(currentDelta.y) > threshold) {\r\n      onGestureMove?.(currentDelta, event)\r\n      lastPos = pos\r\n      lastTime = Date.now()\r\n    }\r\n  }\r\n\r\n  const handleEnd = (event: TouchEvent | MouseEvent) => {\r\n    if (!isGesturing.value) return\r\n\r\n    isGesturing.value = false\r\n    \r\n    // 计算速度\r\n    const timeDiff = Date.now() - lastTime\r\n    const velocity = {\r\n      x: timeDiff > 0 ? (currentPos.value.x - lastPos.x) / timeDiff : 0,\r\n      y: timeDiff > 0 ? (currentPos.value.y - lastPos.y) / timeDiff : 0,\r\n    }\r\n\r\n    onGestureEnd?.(velocity, event)\r\n  }\r\n\r\n  const addEventHandler = (element: HTMLElement | Window, event: string, handler: EventListener, options?: any) => {\r\n    element.addEventListener(event, handler, options)\r\n    handlers.push({ element, event, handler, options })\r\n  }\r\n\r\n  const removeAllHandlers = () => {\r\n    for (const { element, event, handler } of handlers) {\r\n      element.removeEventListener(event, handler)\r\n    }\r\n    handlers = []\r\n  }\r\n\r\n  onMounted(() => {\r\n    const element = elementRef.value\r\n    if (!element) return\r\n\r\n    // 支持触摸和鼠标事件\r\n    addEventHandler(element, 'touchstart', handleStart as EventListener, { passive: true })\r\n    addEventHandler(element, 'touchmove', handleMove as EventListener, { passive: true })\r\n    addEventHandler(element, 'touchend', handleEnd as EventListener, { passive: true })\r\n    addEventHandler(element, 'mousedown', handleStart as EventListener)\r\n    addEventHandler(window, 'mousemove', handleMove as EventListener)\r\n    addEventHandler(window, 'mouseup', handleEnd as EventListener)\r\n  })\r\n\r\n  onBeforeUnmount(() => {\r\n    removeAllHandlers()\r\n  })\r\n\r\n  return {\r\n    isGesturing,\r\n    delta,\r\n    startPos,\r\n    currentPos,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用序列动画\r\n */\r\nexport function useSequenceAnimation(steps: SequenceStep[]) {\r\n  const currentStep = ref(0)\r\n  const isPlaying = ref(false)\r\n  const completedSteps = ref<number[]>([])\r\n\r\n  const playStep = (stepIndex: number): Promise<void> => {\r\n    return new Promise((resolve) => {\r\n      if (stepIndex >= steps.length) {\r\n        resolve()\r\n        return\r\n      }\r\n\r\n      const step = steps[stepIndex]\r\n      const element = typeof step.target === 'string' \r\n        ? document.querySelector(step.target) as HTMLElement\r\n        : step.target\r\n\r\n      if (!element) {\r\n        console.warn(`Element not found for step ${stepIndex}`)\r\n        resolve()\r\n        return\r\n      }\r\n\r\n      const animation = useTemplateAnimation({\r\n        ...step.config,\r\n        onUpdate: (progress) => {\r\n          // 应用动画属性\r\n          Object.entries(step.properties).forEach(([prop, value]) => {\r\n            if (typeof value === 'number') {\r\n              const startValue = Number.parseFloat(getComputedStyle(element)[prop as any] || '0')\r\n              const currentValue = startValue + (value - startValue) * progress\r\n              element.style[prop as any] = `${currentValue}px`\r\n            } else {\r\n              element.style[prop as any] = value\r\n            }\r\n          })\r\n          step.config?.onUpdate?.(progress)\r\n        },\r\n        onComplete: () => {\r\n          completedSteps.value.push(stepIndex)\r\n          step.config?.onComplete?.()\r\n          resolve()\r\n        },\r\n      })\r\n\r\n      animation.play()\r\n    })\r\n  }\r\n\r\n  const play = async () => {\r\n    if (isPlaying.value) return\r\n\r\n    isPlaying.value = true\r\n    completedSteps.value = []\r\n    \r\n    for (let i = 0; i < steps.length; i++) {\r\n      currentStep.value = i\r\n      await playStep(i)\r\n    }\r\n\r\n    isPlaying.value = false\r\n  }\r\n\r\n  const playFrom = async (stepIndex: number) => {\r\n    if (isPlaying.value || stepIndex >= steps.length) return\r\n\r\n    isPlaying.value = true\r\n    \r\n    for (let i = stepIndex; i < steps.length; i++) {\r\n      currentStep.value = i\r\n      await playStep(i)\r\n    }\r\n\r\n    isPlaying.value = false\r\n  }\r\n\r\n  const stop = () => {\r\n    isPlaying.value = false\r\n    currentStep.value = 0\r\n    completedSteps.value = []\r\n  }\r\n\r\n  return {\r\n    currentStep,\r\n    isPlaying,\r\n    completedSteps,\r\n    play,\r\n    playFrom,\r\n    stop,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用滚动触发动画\r\n */\r\nexport function useScrollAnimation(\r\n  elementRef: Ref<HTMLElement | null>,\r\n  animationConfig: AnimationConfig & {\r\n    triggerOffset?: number // 触发动画的滚动偏移 (0-1)\r\n    once?: boolean // 是否只触发一次\r\n  } = {}\r\n) {\r\n  const { triggerOffset = 0.8, once = true, ...config } = animationConfig\r\n  const hasTriggered = ref(false)\r\n  const animation = useTemplateAnimation(config)\r\n  let scrollHandler: (() => void) | null = null\r\n\r\n  const checkVisibility = () => {\r\n    const element = elementRef.value\r\n    if (!element || (hasTriggered.value && once)) return\r\n\r\n    const rect = element.getBoundingClientRect()\r\n    const viewportHeight = window.innerHeight\r\n    const triggerPoint = viewportHeight * triggerOffset\r\n\r\n    if (rect.top < triggerPoint && rect.bottom > 0) {\r\n      if (!hasTriggered.value) {\r\n        hasTriggered.value = true\r\n        animation.play()\r\n      }\r\n    } else if (!once && hasTriggered.value) {\r\n      // 如果不是只触发一次，且元素离开视口，重置动画\r\n      hasTriggered.value = false\r\n      animation.reset()\r\n    }\r\n  }\r\n\r\n  // 使用节流优化滚动性能\r\n  const throttledCheckVisibility = () => {\r\n    if (!scrollHandler) {\r\n      scrollHandler = () => {\r\n        checkVisibility()\r\n        scrollHandler = null\r\n      }\r\n      requestAnimationFrame(scrollHandler)\r\n    }\r\n  }\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('scroll', throttledCheckVisibility, { passive: true })\r\n    checkVisibility() // 初始检查\r\n  })\r\n\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener('scroll', throttledCheckVisibility)\r\n    animation.stop() // 确保停止动画\r\n  })\r\n\r\n  return {\r\n    ...animation,\r\n    hasTriggered,\r\n  }\r\n}\r\n"],"names":["EASING_FUNCTIONS","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInElastic","c4","Math","PI","sin","easeOutElastic","easeInBack","c1","c3","easeOutBack","easeInBounce","easeOutBounce","n1","d1","useTemplateAnimation","options","isPlaying","ref","isPaused","progress","currentLoop","animationId","startTime","pauseTime","duration","delay","easing","loop","yoyo","onStart","onUpdate","onComplete","easingFn","animate","timestamp","requestAnimationFrame","elapsed","rawProgress","min","adjustedProgress","value","maxLoops","Infinity","play","pause","cancelAnimationFrame","resume","stop","reset","onBeforeUnmount","useParallax","elementRef","config","speed","direction","reverse","offset","threshold","scrollY","scrollX","transform","computed","element","rect","getBoundingClientRect","viewportHeight","window","innerHeight","elementProgress","top","height","multiplier","movement","handleScroll","onMounted","addEventListener","passive","removeEventListener","watch","newTransform","style","useGesture","onGestureStart","onGestureMove","onGestureEnd","isGesturing","startPos","x","y","currentPos","delta","lastPos","lastTime","handlers","getEventPos","event","touches","clientX","clientY","handleStart","pos","Date","now","handleMove","currentDelta","abs","handleEnd","timeDiff","velocity","addEventHandler","handler","push","removeAllHandlers","useSequenceAnimation","steps","currentStep","completedSteps","playStep","stepIndex","Promise","resolve","length","step","target","document","querySelector","console","warn","animation","Object","entries","properties","forEach","prop","startValue","Number","parseFloat","getComputedStyle","currentValue","i","playFrom","useScrollAnimation","animationConfig","triggerOffset","once","hasTriggered","scrollHandler","checkVisibility","triggerPoint","bottom","throttledCheckVisibility"],"mappings":"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"}