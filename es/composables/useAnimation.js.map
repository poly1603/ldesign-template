{"version":3,"file":"useAnimation.js","sources":["../../src/composables/useAnimation.ts"],"sourcesContent":["/**\r\n * 模板动画组合式函数\r\n */\r\n\r\nimport type { Ref} from 'vue';\r\nimport type {\r\n  AnimationConfig,\r\n  AnimationState,\r\n  GestureConfig,\r\n  ParallaxConfig,\r\n  ScrollAnimationConfig} from '../core/animation';\r\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\r\nimport {\r\n  Animation,\r\n  animationController,\r\n  GestureController,\r\n  parallaxController\r\n} from '../core/animation'\r\n\r\n/**\r\n * 使用动画\r\n */\r\nexport function useAnimation(\r\n  elementRef: Ref<HTMLElement | null>,\r\n  config: AnimationConfig | Ref<AnimationConfig>\r\n) {\r\n  const animation = ref<Animation | null>(null)\r\n  const state = ref<AnimationState>({\r\n    playing: false,\r\n    paused: false,\r\n    progress: 0,\r\n    iteration: 0,\r\n    finished: false\r\n  })\r\n  \r\n  const animationId = `animation-${Date.now()}-${Math.random()}`\r\n  \r\n  // 获取配置\r\n  const getConfig = () => {\r\n    return 'value' in config ? config.value : config\r\n  }\r\n  \r\n  // 初始化动画\r\n  const init = () => {\r\n    if (!elementRef.value) return\r\n    \r\n    const currentConfig = getConfig()\r\n    animation.value = animationController.create(\r\n      animationId,\r\n      elementRef.value,\r\n      currentConfig\r\n    )\r\n    \r\n    // 同步状态\r\n    watchEffect(() => {\r\n      if (animation.value) {\r\n        Object.assign(state.value, animation.value.getState())\r\n      }\r\n    })\r\n  }\r\n  \r\n  // 播放\r\n  const play = () => {\r\n    animationController.play(animationId)\r\n  }\r\n  \r\n  // 暂停\r\n  const pause = () => {\r\n    animationController.pause(animationId)\r\n  }\r\n  \r\n  // 停止\r\n  const stop = () => {\r\n    animationController.stop(animationId)\r\n  }\r\n  \r\n  // 重置\r\n  const reset = () => {\r\n    animationController.reset(animationId)\r\n  }\r\n  \r\n  // 反转\r\n  const reverse = () => {\r\n    animation.value?.reverse()\r\n  }\r\n  \r\n  // 设置速度\r\n  const setSpeed = (rate: number) => {\r\n    animation.value?.setPlaybackRate(rate)\r\n  }\r\n  \r\n  // 跳转\r\n  const seek = (time: number) => {\r\n    animation.value?.seek(time)\r\n  }\r\n  \r\n  // 挂载时初始化\r\n  onMounted(() => {\r\n    init()\r\n  })\r\n  \r\n  // 卸载时清理\r\n  onUnmounted(() => {\r\n    animationController.destroy(animationId)\r\n  })\r\n  \r\n  return {\r\n    animation,\r\n    state,\r\n    play,\r\n    pause,\r\n    stop,\r\n    reset,\r\n    reverse,\r\n    setSpeed,\r\n    seek\r\n  }\r\n}\r\n\r\n/**\r\n * 使用视差效果\r\n */\r\nexport function useParallax(\r\n  elementRef: Ref<HTMLElement | null>,\r\n  config: ParallaxConfig = {}\r\n) {\r\n  const isActive = ref(false)\r\n  \r\n  // 添加视差\r\n  const enable = () => {\r\n    if (!elementRef.value) return\r\n    \r\n    parallaxController.add(elementRef.value, config)\r\n    isActive.value = true\r\n  }\r\n  \r\n  // 移除视差\r\n  const disable = () => {\r\n    if (!elementRef.value) return\r\n    \r\n    parallaxController.remove(elementRef.value)\r\n    isActive.value = false\r\n  }\r\n  \r\n  // 更新配置\r\n  const updateConfig = (newConfig: Partial<ParallaxConfig>) => {\r\n    if (!elementRef.value) return\r\n    \r\n    disable()\r\n    Object.assign(config, newConfig)\r\n    enable()\r\n  }\r\n  \r\n  // 挂载时启用\r\n  onMounted(() => {\r\n    enable()\r\n  })\r\n  \r\n  // 卸载时禁用\r\n  onUnmounted(() => {\r\n    disable()\r\n  })\r\n  \r\n  return {\r\n    isActive,\r\n    enable,\r\n    disable,\r\n    updateConfig\r\n  }\r\n}\r\n\r\n/**\r\n * 使用手势\r\n */\r\nexport function useGesture(\r\n  elementRef: Ref<HTMLElement | null>,\r\n  config: GestureConfig = {}\r\n) {\r\n  const controller = ref<GestureController | null>(null)\r\n  const isDragging = ref(false)\r\n  const position = ref({ x: 0, y: 0 })\r\n  const velocity = ref({ x: 0, y: 0 })\r\n  const swipeDirection = ref<'up' | 'down' | 'left' | 'right' | null>(null)\r\n  \r\n  // 初始化\r\n  const init = () => {\r\n    if (!elementRef.value) return\r\n    \r\n    controller.value = new GestureController(elementRef.value, config)\r\n    \r\n    // 监听滑动事件\r\n    elementRef.value.addEventListener('swipe', (e: Event) => {\r\n      const customEvent = e as CustomEvent\r\n      swipeDirection.value = customEvent.detail.direction\r\n      \r\n    // 自动重置\r\n    const timer = setTimeout(() => {\r\n      swipeDirection.value = null\r\n    }, 500)\r\n    \r\n    // 确保清理定时器\r\n    onUnmounted(() => clearTimeout(timer))\r\n    })\r\n  }\r\n  \r\n  // 销毁\r\n  const destroy = () => {\r\n    controller.value?.destroy()\r\n    controller.value = null\r\n  }\r\n  \r\n  // 挂载时初始化\r\n  onMounted(() => {\r\n    init()\r\n  })\r\n  \r\n  // 卸载时销毁\r\n  onUnmounted(() => {\r\n    destroy()\r\n  })\r\n  \r\n  return {\r\n    controller,\r\n    isDragging,\r\n    position,\r\n    velocity,\r\n    swipeDirection\r\n  }\r\n}\r\n\r\n/**\r\n * 使用滚动动画\r\n */\r\nexport function useScrollAnimation(\r\n  elementRef: Ref<HTMLElement | null>,\r\n  config: ScrollAnimationConfig = {}\r\n) {\r\n  const isInView = ref(false)\r\n  const progress = ref(0)\r\n  const hasEntered = ref(false)\r\n  const observer = ref<IntersectionObserver | null>(null)\r\n  \r\n  // 计算触发位置\r\n  const getTriggerPosition = () => {\r\n    switch (config.trigger) {\r\n      case 'top':\r\n        return 0\r\n      case 'bottom':\r\n        return 1\r\n      case 'center':\r\n      default:\r\n        return 0.5\r\n    }\r\n  }\r\n  \r\n  // 初始化\r\n  const init = () => {\r\n    if (!elementRef.value) return\r\n    \r\n    const threshold = getTriggerPosition()\r\n    const rootMargin = `${config.offset || 0}px`\r\n    \r\n    observer.value = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          const wasInView = isInView.value\r\n          isInView.value = entry.isIntersecting\r\n          \r\n          // 计算进度\r\n          if (entry.isIntersecting) {\r\n            const { top, height } = entry.boundingClientRect\r\n            const windowHeight = window.innerHeight\r\n            const elementProgress = 1 - (top / (windowHeight - height))\r\n            progress.value = Math.min(Math.max(0, elementProgress), 1)\r\n            \r\n            if (config.onProgress) {\r\n              config.onProgress(progress.value)\r\n            }\r\n          }\r\n          \r\n          // 处理进入/离开动画\r\n          if (!wasInView && isInView.value) {\r\n            // 进入视口\r\n            if (!hasEntered.value || !config.once) {\r\n              hasEntered.value = true\r\n              if (config.enter && elementRef.value) {\r\n                const animation = new Animation(elementRef.value, config.enter)\r\n                animation.play()\r\n              }\r\n            }\r\n          } else if (wasInView && !isInView.value) {\r\n            // 离开视口\r\n            if (config.leave && elementRef.value) {\r\n              const animation = new Animation(elementRef.value, config.leave)\r\n              animation.play()\r\n            }\r\n          }\r\n        })\r\n      },\r\n      {\r\n        threshold,\r\n        rootMargin\r\n      }\r\n    )\r\n    \r\n    observer.value.observe(elementRef.value)\r\n  }\r\n  \r\n  // 重置\r\n  const reset = () => {\r\n    hasEntered.value = false\r\n    progress.value = 0\r\n  }\r\n  \r\n  // 销毁\r\n  const destroy = () => {\r\n    observer.value?.disconnect()\r\n    observer.value = null\r\n  }\r\n  \r\n  // 挂载时初始化\r\n  onMounted(() => {\r\n    init()\r\n  })\r\n  \r\n  // 卸载时销毁\r\n  onUnmounted(() => {\r\n    destroy()\r\n  })\r\n  \r\n  return {\r\n    isInView,\r\n    progress,\r\n    hasEntered,\r\n    reset\r\n  }\r\n}\r\n\r\n/**\r\n * 使用动画组\r\n */\r\nexport function useAnimationGroup(\r\n  animations: Array<{\r\n    element: Ref<HTMLElement | null>\r\n    config: AnimationConfig\r\n  }>\r\n) {\r\n  const animationInstances = ref<Animation[]>([])\r\n  const isPlaying = ref(false)\r\n  const isPaused = ref(false)\r\n  const staggerTimers: ReturnType<typeof setTimeout>[] = []\r\n  \r\n  // 初始化所有动画\r\n  const init = () => {\r\n    animations.forEach(({ element, config }, index) => {\r\n      if (element.value) {\r\n        const id = `group-animation-${index}-${Date.now()}`\r\n        const animation = animationController.create(id, element.value, config)\r\n        animationInstances.value.push(animation)\r\n      }\r\n    })\r\n  }\r\n  \r\n  // 播放所有\r\n  const playAll = (stagger: number = 0) => {\r\n    // 清理之前的定时器\r\n    staggerTimers.forEach(timer => clearTimeout(timer))\r\n    staggerTimers.length = 0\r\n    \r\n    animationInstances.value.forEach((animation, index) => {\r\n      const timer = setTimeout(() => {\r\n        animation.play()\r\n      }, index * stagger)\r\n      staggerTimers.push(timer)\r\n    })\r\n    isPlaying.value = true\r\n    isPaused.value = false\r\n  }\r\n  \r\n  // 暂停所有\r\n  const pauseAll = () => {\r\n    animationInstances.value.forEach(animation => {\r\n      animation.pause()\r\n    })\r\n    isPaused.value = true\r\n  }\r\n  \r\n  // 停止所有\r\n  const stopAll = () => {\r\n    animationInstances.value.forEach(animation => {\r\n      animation.stop()\r\n    })\r\n    isPlaying.value = false\r\n    isPaused.value = false\r\n  }\r\n  \r\n  // 重置所有\r\n  const resetAll = () => {\r\n    animationInstances.value.forEach(animation => {\r\n      animation.reset()\r\n    })\r\n    isPlaying.value = false\r\n    isPaused.value = false\r\n  }\r\n  \r\n  // 销毁所有\r\n  const destroyAll = () => {\r\n    // 清理定时器\r\n    staggerTimers.forEach(timer => clearTimeout(timer))\r\n    staggerTimers.length = 0\r\n    \r\n    animationInstances.value.forEach(animation => {\r\n      animation.destroy()\r\n    })\r\n    animationInstances.value = []\r\n  }\r\n  \r\n  // 挂载时初始化\r\n  onMounted(() => {\r\n    init()\r\n  })\r\n  \r\n  // 卸载时销毁\r\n  onUnmounted(() => {\r\n    destroyAll()\r\n  })\r\n  \r\n  return {\r\n    animationInstances,\r\n    isPlaying,\r\n    isPaused,\r\n    playAll,\r\n    pauseAll,\r\n    stopAll,\r\n    resetAll\r\n  }\r\n}\r\n\r\n/**\r\n * 使用时间线动画\r\n */\r\nexport function useTimeline() {\r\n  interface TimelineItem {\r\n    element: HTMLElement\r\n    animation: Animation\r\n    startTime: number\r\n    duration: number\r\n  }\r\n  \r\n  const timeline = ref<TimelineItem[]>([])\r\n  const currentTime = ref(0)\r\n  const duration = ref(0)\r\n  const isPlaying = ref(false)\r\n  const rafId = ref<number | null>(null)\r\n  const startTimestamp = ref(0)\r\n  const MAX_TIMELINE_ITEMS = 100 // 限制timeline项目数量\r\n  \r\n  // 添加动画到时间线\r\n  const add = (\r\n    element: HTMLElement,\r\n    config: AnimationConfig,\r\n    startTime: number = 0\r\n  ) => {\r\n    const id = `timeline-${Date.now()}-${Math.random()}`\r\n    const animation = animationController.create(id, element, {\r\n      ...config,\r\n      autoPlay: false\r\n    })\r\n    \r\n    const item: TimelineItem = {\r\n      element,\r\n      animation,\r\n      startTime,\r\n      duration: config.duration || 300\r\n    }\r\n    \r\n    timeline.value.push(item)\r\n    \r\n    // 限制timeline数量，防止内存泄漏\r\n    if (timeline.value.length > MAX_TIMELINE_ITEMS) {\r\n      const removed = timeline.value.shift()\r\n      if (removed) {\r\n        removed.animation.destroy()\r\n      }\r\n    }\r\n    \r\n    // 更新总时长\r\n    duration.value = Math.max(\r\n      duration.value,\r\n      startTime + item.duration\r\n    )\r\n    \r\n    return animation\r\n  }\r\n  \r\n  // 播放时间线\r\n  const play = () => {\r\n    if (isPlaying.value) return\r\n    \r\n    isPlaying.value = true\r\n    startTimestamp.value = performance.now() - currentTime.value\r\n    \r\n    const animate = (timestamp: number) => {\r\n      if (!isPlaying.value) return\r\n      \r\n      currentTime.value = timestamp - startTimestamp.value\r\n      \r\n      // 更新每个动画的状态\r\n      timeline.value.forEach(item => {\r\n        const localTime = currentTime.value - item.startTime\r\n        \r\n        if (localTime >= 0 && localTime <= item.duration) {\r\n          // 在时间范围内，更新动画\r\n          item.animation.seek(localTime)\r\n        } else if (localTime > item.duration) {\r\n          // 动画已完成\r\n          item.animation.seek(item.duration)\r\n        } else {\r\n          // 动画尚未开始\r\n          item.animation.seek(0)\r\n        }\r\n      })\r\n      \r\n      if (currentTime.value < duration.value) {\r\n        rafId.value = requestAnimationFrame(animate)\r\n      } else {\r\n        // 时间线完成\r\n        isPlaying.value = false\r\n        currentTime.value = duration.value\r\n      }\r\n    }\r\n    \r\n    rafId.value = requestAnimationFrame(animate)\r\n  }\r\n  \r\n  // 暂停时间线\r\n  const pause = () => {\r\n    isPlaying.value = false\r\n    if (rafId.value) {\r\n      cancelAnimationFrame(rafId.value)\r\n      rafId.value = null\r\n    }\r\n  }\r\n  \r\n  // 停止时间线\r\n  const stop = () => {\r\n    pause()\r\n    currentTime.value = 0\r\n    timeline.value.forEach(item => {\r\n      item.animation.reset()\r\n    })\r\n  }\r\n  \r\n  // 跳转到指定时间\r\n  const seek = (time: number) => {\r\n    currentTime.value = Math.min(Math.max(0, time), duration.value)\r\n    \r\n    timeline.value.forEach(item => {\r\n      const localTime = currentTime.value - item.startTime\r\n      \r\n      if (localTime >= 0 && localTime <= item.duration) {\r\n        item.animation.seek(localTime)\r\n      } else if (localTime > item.duration) {\r\n        item.animation.seek(item.duration)\r\n      } else {\r\n        item.animation.seek(0)\r\n      }\r\n    })\r\n  }\r\n  \r\n  // 清空时间线\r\n  const clear = () => {\r\n    stop()\r\n    timeline.value.forEach(item => {\r\n      item.animation.destroy()\r\n    })\r\n    timeline.value = []\r\n    duration.value = 0\r\n  }\r\n  \r\n  // 获取进度\r\n  const progress = computed(() => {\r\n    return duration.value > 0 ? currentTime.value / duration.value : 0\r\n  })\r\n  \r\n  // 卸载时清理\r\n  onUnmounted(() => {\r\n    clear()\r\n  })\r\n  \r\n  return {\r\n    timeline,\r\n    currentTime,\r\n    duration,\r\n    progress,\r\n    isPlaying,\r\n    add,\r\n    play,\r\n    pause,\r\n    stop,\r\n    seek,\r\n    clear\r\n  }\r\n}"],"names":["useAnimation","elementRef","config","animation","ref","state","playing","paused","progress","iteration","finished","animationId","Date","now","Math","random","getConfig","value","init","currentConfig","animationController","create","watchEffect","Object","assign","getState","play","pause","stop","reset","reverse","setSpeed","rate","setPlaybackRate","seek","time","onMounted","onUnmounted","destroy","useParallax","isActive","enable","parallaxController","add","disable","remove","updateConfig","newConfig","useGesture","controller","isDragging","position","x","y","velocity","swipeDirection","GestureController","addEventListener","e","customEvent","detail","direction","timer","setTimeout","clearTimeout","useScrollAnimation","isInView","hasEntered","observer","getTriggerPosition","trigger","threshold","rootMargin","offset","IntersectionObserver","entries","forEach","entry","wasInView","isIntersecting","top","height","boundingClientRect","windowHeight","window","innerHeight","elementProgress","min","max","onProgress","once","enter","Animation","leave","observe","disconnect","useAnimationGroup","animations","animationInstances","isPlaying","isPaused","staggerTimers","element","index","id","push","playAll","stagger","length","pauseAll","stopAll","resetAll","destroyAll","useTimeline","timeline","currentTime","duration","rafId","startTimestamp","MAX_TIMELINE_ITEMS","startTime","autoPlay","item","removed","shift","performance","animate","timestamp","localTime","requestAnimationFrame","cancelAnimationFrame","clear","computed"],"mappings":"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"}